/*
 * generated by Xtext 2.16.0
 */
grammar InternalSml;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.sml.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.sml.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.sml.services.SmlGrammarAccess;

}
@parser::members {
	private SmlGrammarAccess grammarAccess;

	public void setGrammarAccess(SmlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvironment
entryRuleEnvironment
:
{ before(grammarAccess.getEnvironmentRule()); }
	 ruleEnvironment
{ after(grammarAccess.getEnvironmentRule()); } 
	 EOF 
;

// Rule Environment
ruleEnvironment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvironmentAccess().getGroup()); }
		(rule__Environment__Group__0)
		{ after(grammarAccess.getEnvironmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProbabilisticDecription
entryRuleProbabilisticDecription
:
{ before(grammarAccess.getProbabilisticDecriptionRule()); }
	 ruleProbabilisticDecription
{ after(grammarAccess.getProbabilisticDecriptionRule()); } 
	 EOF 
;

// Rule ProbabilisticDecription
ruleProbabilisticDecription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProbabilisticDecriptionAccess().getGroup()); }
		(rule__ProbabilisticDecription__Group__0)
		{ after(grammarAccess.getProbabilisticDecriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwarmconf
entryRuleSwarmconf
:
{ before(grammarAccess.getSwarmconfRule()); }
	 ruleSwarmconf
{ after(grammarAccess.getSwarmconfRule()); } 
	 EOF 
;

// Rule Swarmconf
ruleSwarmconf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwarmconfAccess().getGroup()); }
		(rule__Swarmconf__Group__0)
		{ after(grammarAccess.getSwarmconfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTask
entryRuleTask
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskAccess().getGroup()); }
		(rule__Task__Group__0)
		{ after(grammarAccess.getTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetric
entryRuleMetric
:
{ before(grammarAccess.getMetricRule()); }
	 ruleMetric
{ after(grammarAccess.getMetricRule()); } 
	 EOF 
;

// Rule Metric
ruleMetric 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetricAccess().getAlternatives()); }
		(rule__Metric__Alternatives)
		{ after(grammarAccess.getMetricAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMissionObjective
entryRuleMissionObjective
:
{ before(grammarAccess.getMissionObjectiveRule()); }
	 ruleMissionObjective
{ after(grammarAccess.getMissionObjectiveRule()); } 
	 EOF 
;

// Rule MissionObjective
ruleMissionObjective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMissionObjectiveAccess().getGroup()); }
		(rule__MissionObjective__Group__0)
		{ after(grammarAccess.getMissionObjectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndicator
entryRuleIndicator
:
{ before(grammarAccess.getIndicatorRule()); }
	 ruleIndicator
{ after(grammarAccess.getIndicatorRule()); } 
	 EOF 
;

// Rule Indicator
ruleIndicator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndicatorAccess().getGroup()); }
		(rule__Indicator__Group__0)
		{ after(grammarAccess.getIndicatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicIndicator
entryRuleAtomicIndicator
:
{ before(grammarAccess.getAtomicIndicatorRule()); }
	 ruleAtomicIndicator
{ after(grammarAccess.getAtomicIndicatorRule()); } 
	 EOF 
;

// Rule AtomicIndicator
ruleAtomicIndicator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicIndicatorAccess().getGroup()); }
		(rule__AtomicIndicator__Group__0)
		{ after(grammarAccess.getAtomicIndicatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompoundIndicator
entryRuleCompoundIndicator
:
{ before(grammarAccess.getCompoundIndicatorRule()); }
	 ruleCompoundIndicator
{ after(grammarAccess.getCompoundIndicatorRule()); } 
	 EOF 
;

// Rule CompoundIndicator
ruleCompoundIndicator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompoundIndicatorAccess().getGroup()); }
		(rule__CompoundIndicator__Group__0)
		{ after(grammarAccess.getCompoundIndicatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScope
entryRuleScope
:
{ before(grammarAccess.getScopeRule()); }
	 ruleScope
{ after(grammarAccess.getScopeRule()); } 
	 EOF 
;

// Rule Scope
ruleScope 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScopeAccess().getSpAssignment()); }
		(rule__Scope__SpAssignment)
		{ after(grammarAccess.getScopeAccess().getSpAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOccurence
entryRuleOccurence
:
{ before(grammarAccess.getOccurenceRule()); }
	 ruleOccurence
{ after(grammarAccess.getOccurenceRule()); } 
	 EOF 
;

// Rule Occurence
ruleOccurence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOccurenceAccess().getAlternatives()); }
		(rule__Occurence__Alternatives)
		{ after(grammarAccess.getOccurenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePenalty
entryRulePenalty
:
{ before(grammarAccess.getPenaltyRule()); }
	 rulePenalty
{ after(grammarAccess.getPenaltyRule()); } 
	 EOF 
;

// Rule Penalty
rulePenalty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPenaltyAccess().getGroup()); }
		(rule__Penalty__Group__0)
		{ after(grammarAccess.getPenaltyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReward
entryRuleReward
:
{ before(grammarAccess.getRewardRule()); }
	 ruleReward
{ after(grammarAccess.getRewardRule()); } 
	 EOF 
;

// Rule Reward
ruleReward 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRewardAccess().getGroup()); }
		(rule__Reward__Group__0)
		{ after(grammarAccess.getRewardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getAlternatives()); }
		(rule__Condition__Alternatives)
		{ after(grammarAccess.getConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRobot
entryRuleRobot
:
{ before(grammarAccess.getRobotRule()); }
	 ruleRobot
{ after(grammarAccess.getRobotRule()); } 
	 EOF 
;

// Rule Robot
ruleRobot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotAccess().getAlternatives()); }
		(rule__Robot__Alternatives)
		{ after(grammarAccess.getRobotAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDistribution
entryRuleDistribution
:
{ before(grammarAccess.getDistributionRule()); }
	 ruleDistribution
{ after(grammarAccess.getDistributionRule()); } 
	 EOF 
;

// Rule Distribution
ruleDistribution 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDistributionAccess().getAlternatives()); }
		(rule__Distribution__Alternatives)
		{ after(grammarAccess.getDistributionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvironmentElements
entryRuleEnvironmentElements
:
{ before(grammarAccess.getEnvironmentElementsRule()); }
	 ruleEnvironmentElements
{ after(grammarAccess.getEnvironmentElementsRule()); } 
	 EOF 
;

// Rule EnvironmentElements
ruleEnvironmentElements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvironmentElementsAccess().getAlternatives()); }
		(rule__EnvironmentElements__Alternatives)
		{ after(grammarAccess.getEnvironmentElementsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvironmentElement
entryRuleEnvironmentElement
:
{ before(grammarAccess.getEnvironmentElementRule()); }
	 ruleEnvironmentElement
{ after(grammarAccess.getEnvironmentElementRule()); } 
	 EOF 
;

// Rule EnvironmentElement
ruleEnvironmentElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvironmentElementAccess().getAlternatives()); }
		(rule__EnvironmentElement__Alternatives)
		{ after(grammarAccess.getEnvironmentElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementDescription
entryRuleElementDescription
:
{ before(grammarAccess.getElementDescriptionRule()); }
	 ruleElementDescription
{ after(grammarAccess.getElementDescriptionRule()); } 
	 EOF 
;

// Rule ElementDescription
ruleElementDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementDescriptionAccess().getGroup()); }
		(rule__ElementDescription__Group__0)
		{ after(grammarAccess.getElementDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObject
entryRuleObject
:
{ before(grammarAccess.getObjectRule()); }
	 ruleObject
{ after(grammarAccess.getObjectRule()); } 
	 EOF 
;

// Rule Object
ruleObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectAccess().getGroup()); }
		(rule__Object__Group__0)
		{ after(grammarAccess.getObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObstacle
entryRuleObstacle
:
{ before(grammarAccess.getObstacleRule()); }
	 ruleObstacle
{ after(grammarAccess.getObstacleRule()); } 
	 EOF 
;

// Rule Obstacle
ruleObstacle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObstacleAccess().getGroup()); }
		(rule__Obstacle__Group__0)
		{ after(grammarAccess.getObstacleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLight
entryRuleLight
:
{ before(grammarAccess.getLightRule()); }
	 ruleLight
{ after(grammarAccess.getLightRule()); } 
	 EOF 
;

// Rule Light
ruleLight 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLightAccess().getGroup()); }
		(rule__Light__Group__0)
		{ after(grammarAccess.getLightAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePosition
entryRulePosition
:
{ before(grammarAccess.getPositionRule()); }
	 rulePosition
{ after(grammarAccess.getPositionRule()); } 
	 EOF 
;

// Rule Position
rulePosition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPositionAccess().getAlternatives()); }
		(rule__Position__Alternatives)
		{ after(grammarAccess.getPositionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShape
entryRuleShape
:
{ before(grammarAccess.getShapeRule()); }
	 ruleShape
{ after(grammarAccess.getShapeRule()); } 
	 EOF 
;

// Rule Shape
ruleShape 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapeAccess().getAlternatives()); }
		(rule__Shape__Alternatives)
		{ after(grammarAccess.getShapeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArena
entryRuleArena
:
{ before(grammarAccess.getArenaRule()); }
	 ruleArena
{ after(grammarAccess.getArenaRule()); } 
	 EOF 
;

// Rule Arena
ruleArena 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArenaAccess().getGroup()); }
		(rule__Arena__Group__0)
		{ after(grammarAccess.getArenaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColor
entryRuleColor
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorAccess().getAlternatives()); }
		(rule__Color__Alternatives)
		{ after(grammarAccess.getColorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegion
entryRuleRegion
:
{ before(grammarAccess.getRegionRule()); }
	 ruleRegion
{ after(grammarAccess.getRegionRule()); } 
	 EOF 
;

// Rule Region
ruleRegion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegionAccess().getGroup()); }
		(rule__Region__Group__0)
		{ after(grammarAccess.getRegionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDimension
entryRuleDimension
:
{ before(grammarAccess.getDimensionRule()); }
	 ruleDimension
{ after(grammarAccess.getDimensionRule()); } 
	 EOF 
;

// Rule Dimension
ruleDimension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDimensionAccess().getAlternatives()); }
		(rule__Dimension__Alternatives)
		{ after(grammarAccess.getDimensionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCircleD
entryRuleCircleD
:
{ before(grammarAccess.getCircleDRule()); }
	 ruleCircleD
{ after(grammarAccess.getCircleDRule()); } 
	 EOF 
;

// Rule CircleD
ruleCircleD 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCircleDAccess().getGroup()); }
		(rule__CircleD__Group__0)
		{ after(grammarAccess.getCircleDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRectangleD
entryRuleRectangleD
:
{ before(grammarAccess.getRectangleDRule()); }
	 ruleRectangleD
{ after(grammarAccess.getRectangleDRule()); } 
	 EOF 
;

// Rule RectangleD
ruleRectangleD 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRectangleDAccess().getGroup()); }
		(rule__RectangleD__Group__0)
		{ after(grammarAccess.getRectangleDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCoordinate
entryRuleCoordinate
:
{ before(grammarAccess.getCoordinateRule()); }
	 ruleCoordinate
{ after(grammarAccess.getCoordinateRule()); } 
	 EOF 
;

// Rule Coordinate
ruleCoordinate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCoordinateAccess().getGroup()); }
		(rule__Coordinate__Group__0)
		{ after(grammarAccess.getCoordinateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDouble
entryRuleDouble
:
{ before(grammarAccess.getDoubleRule()); }
	 ruleDouble
{ after(grammarAccess.getDoubleRule()); } 
	 EOF 
;

// Rule Double
ruleDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoubleAccess().getGroup()); }
		(rule__Double__Group__0)
		{ after(grammarAccess.getDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRange
entryRuleRange
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeAccess().getAlternatives()); }
		(rule__Range__Alternatives)
		{ after(grammarAccess.getRangeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantSize
entryRuleConstantSize
:
{ before(grammarAccess.getConstantSizeRule()); }
	 ruleConstantSize
{ after(grammarAccess.getConstantSizeRule()); } 
	 EOF 
;

// Rule ConstantSize
ruleConstantSize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantSizeAccess().getNAssignment()); }
		(rule__ConstantSize__NAssignment)
		{ after(grammarAccess.getConstantSizeAccess().getNAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLowerbound
entryRuleLowerbound
:
{ before(grammarAccess.getLowerboundRule()); }
	 ruleLowerbound
{ after(grammarAccess.getLowerboundRule()); } 
	 EOF 
;

// Rule Lowerbound
ruleLowerbound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLowerboundAccess().getGroup()); }
		(rule__Lowerbound__Group__0)
		{ after(grammarAccess.getLowerboundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLowerorEqualbound
entryRuleLowerorEqualbound
:
{ before(grammarAccess.getLowerorEqualboundRule()); }
	 ruleLowerorEqualbound
{ after(grammarAccess.getLowerorEqualboundRule()); } 
	 EOF 
;

// Rule LowerorEqualbound
ruleLowerorEqualbound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLowerorEqualboundAccess().getGroup()); }
		(rule__LowerorEqualbound__Group__0)
		{ after(grammarAccess.getLowerorEqualboundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpperbound
entryRuleUpperbound
:
{ before(grammarAccess.getUpperboundRule()); }
	 ruleUpperbound
{ after(grammarAccess.getUpperboundRule()); } 
	 EOF 
;

// Rule Upperbound
ruleUpperbound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpperboundAccess().getGroup()); }
		(rule__Upperbound__Group__0)
		{ after(grammarAccess.getUpperboundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpperorEqualbound
entryRuleUpperorEqualbound
:
{ before(grammarAccess.getUpperorEqualboundRule()); }
	 ruleUpperorEqualbound
{ after(grammarAccess.getUpperorEqualboundRule()); } 
	 EOF 
;

// Rule UpperorEqualbound
ruleUpperorEqualbound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpperorEqualboundAccess().getGroup()); }
		(rule__UpperorEqualbound__Group__0)
		{ after(grammarAccess.getUpperorEqualboundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterval
entryRuleInterval
:
{ before(grammarAccess.getIntervalRule()); }
	 ruleInterval
{ after(grammarAccess.getIntervalRule()); } 
	 EOF 
;

// Rule Interval
ruleInterval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntervalAccess().getGroup()); }
		(rule__Interval__Group__0)
		{ after(grammarAccess.getIntervalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolLiteral
entryRuleBoolLiteral
:
{ before(grammarAccess.getBoolLiteralRule()); }
	 ruleBoolLiteral
{ after(grammarAccess.getBoolLiteralRule()); } 
	 EOF 
;

// Rule BoolLiteral
ruleBoolLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolLiteralAccess().getValueAssignment()); }
		(rule__BoolLiteral__ValueAssignment)
		{ after(grammarAccess.getBoolLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metric__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetricAccess().getSecondsKeyword_0()); }
		'seconds'
		{ after(grammarAccess.getMetricAccess().getSecondsKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMetricAccess().getStepsKeyword_1()); }
		'steps'
		{ after(grammarAccess.getMetricAccess().getStepsKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indicator__OcAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndicatorAccess().getOcAtomicIndicatorParserRuleCall_1_0_0()); }
		ruleAtomicIndicator
		{ after(grammarAccess.getIndicatorAccess().getOcAtomicIndicatorParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIndicatorAccess().getOcCompoundIndicatorParserRuleCall_1_0_1()); }
		ruleCompoundIndicator
		{ after(grammarAccess.getIndicatorAccess().getOcCompoundIndicatorParserRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__SpAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getSpAtAnyPointOfTimeKeyword_0_0()); }
		'At any point of time'
		{ after(grammarAccess.getScopeAccess().getSpAtAnyPointOfTimeKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getScopeAccess().getSpAtTheEndOfTheMissionKeyword_0_1()); }
		'At the end of the mission'
		{ after(grammarAccess.getScopeAccess().getSpAtTheEndOfTheMissionKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Occurence__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOccurenceAccess().getRewardParserRuleCall_0()); }
		ruleReward
		{ after(grammarAccess.getOccurenceAccess().getRewardParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOccurenceAccess().getPenaltyParserRuleCall_1()); }
		rulePenalty
		{ after(grammarAccess.getOccurenceAccess().getPenaltyParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getGroup_0()); }
		(rule__Condition__Group_0__0)
		{ after(grammarAccess.getConditionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getGroup_1()); }
		(rule__Condition__Group_1__0)
		{ after(grammarAccess.getConditionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getEPuckKeyword_0()); }
		'e-puck'
		{ after(grammarAccess.getRobotAccess().getEPuckKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getRobotAccess().getFootBootKeyword_1()); }
		'foot-boot'
		{ after(grammarAccess.getRobotAccess().getFootBootKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distribution__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDistributionAccess().getUniformKeyword_0()); }
		'uniform'
		{ after(grammarAccess.getDistributionAccess().getUniformKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getDistributionAccess().getGaussianKeyword_1()); }
		'gaussian'
		{ after(grammarAccess.getDistributionAccess().getGaussianKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getDistributionAccess().getConstantKeyword_2()); }
		'constant'
		{ after(grammarAccess.getDistributionAccess().getConstantKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentElements__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentElementsAccess().getEnvironmentElementParserRuleCall_0()); }
		ruleEnvironmentElement
		{ after(grammarAccess.getEnvironmentElementsAccess().getEnvironmentElementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnvironmentElementsAccess().getElementDescriptionParserRuleCall_1()); }
		ruleElementDescription
		{ after(grammarAccess.getEnvironmentElementsAccess().getElementDescriptionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentElementAccess().getObstacleParserRuleCall_0()); }
		ruleObstacle
		{ after(grammarAccess.getEnvironmentElementAccess().getObstacleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnvironmentElementAccess().getLightParserRuleCall_1()); }
		ruleLight
		{ after(grammarAccess.getEnvironmentElementAccess().getLightParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getEnvironmentElementAccess().getObjectParserRuleCall_2()); }
		ruleObject
		{ after(grammarAccess.getEnvironmentElementAccess().getObjectParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getObjectsKeyword_0()); }
		'objects'
		{ after(grammarAccess.getElementAccess().getObjectsKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getObstaclesKeyword_1()); }
		'obstacles'
		{ after(grammarAccess.getElementAccess().getObstaclesKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getGroup_2()); }
		(rule__Element__Group_2__0)
		{ after(grammarAccess.getElementAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionAccess().getGroup_0()); }
		(rule__Position__Group_0__0)
		{ after(grammarAccess.getPositionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPositionAccess().getGroup_1()); }
		(rule__Position__Group_1__0)
		{ after(grammarAccess.getPositionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPositionAccess().getGroup_2()); }
		(rule__Position__Group_2__0)
		{ after(grammarAccess.getPositionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeAccess().getCircleKeyword_0()); }
		'Circle'
		{ after(grammarAccess.getShapeAccess().getCircleKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getShapeAccess().getPolygonKeyword_1()); }
		'Polygon'
		{ after(grammarAccess.getShapeAccess().getPolygonKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getShapeAccess().getTriangleKeyword_2()); }
		'Triangle'
		{ after(grammarAccess.getShapeAccess().getTriangleKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getShapeAccess().getRectangleKeyword_3()); }
		'Rectangle'
		{ after(grammarAccess.getShapeAccess().getRectangleKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getRedKeyword_0()); }
		'red'
		{ after(grammarAccess.getColorAccess().getRedKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getYellowKeyword_1()); }
		'yellow'
		{ after(grammarAccess.getColorAccess().getYellowKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getGreenKeyword_2()); }
		'green'
		{ after(grammarAccess.getColorAccess().getGreenKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimensionAccess().getCircleDParserRuleCall_0()); }
		ruleCircleD
		{ after(grammarAccess.getDimensionAccess().getCircleDParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDimensionAccess().getRectangleDParserRuleCall_1()); }
		ruleRectangleD
		{ after(grammarAccess.getDimensionAccess().getRectangleDParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getUpperboundParserRuleCall_0()); }
		ruleUpperbound
		{ after(grammarAccess.getRangeAccess().getUpperboundParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeAccess().getLowerboundParserRuleCall_1()); }
		ruleLowerbound
		{ after(grammarAccess.getRangeAccess().getLowerboundParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRangeAccess().getIntervalParserRuleCall_2()); }
		ruleInterval
		{ after(grammarAccess.getRangeAccess().getIntervalParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRangeAccess().getLowerorEqualboundParserRuleCall_3()); }
		ruleLowerorEqualbound
		{ after(grammarAccess.getRangeAccess().getLowerorEqualboundParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getRangeAccess().getUpperorEqualboundParserRuleCall_4()); }
		ruleUpperorEqualbound
		{ after(grammarAccess.getRangeAccess().getUpperorEqualboundParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getRangeAccess().getConstantSizeParserRuleCall_5()); }
		ruleConstantSize
		{ after(grammarAccess.getRangeAccess().getConstantSizeParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getIntLiteralKeyword_0()); }
		'IntLiteral'
		{ after(grammarAccess.getLiteralAccess().getIntLiteralKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getRealLiteralKeyword_1()); }
		'RealLiteral'
		{ after(grammarAccess.getLiteralAccess().getRealLiteralKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_2()); }
		ruleBoolLiteral
		{ after(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolLiteralAccess().getValueTrueKeyword_0_0()); }
		'true'
		{ after(grammarAccess.getBoolLiteralAccess().getValueTrueKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolLiteralAccess().getValueFalseKeyword_0_1()); }
		'false'
		{ after(grammarAccess.getBoolLiteralAccess().getValueFalseKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getArenasAssignment_0()); }
	(rule__Model__ArenasAssignment_0)
	{ after(grammarAccess.getModelAccess().getArenasAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getEnvAssignment_1()); }
	(rule__Model__EnvAssignment_1)
	{ after(grammarAccess.getModelAccess().getEnvAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSwAssignment_2()); }
	(rule__Model__SwAssignment_2)
	{ after(grammarAccess.getModelAccess().getSwAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getObAssignment_3()); }
	(rule__Model__ObAssignment_3)
	{ after(grammarAccess.getModelAccess().getObAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__0__Impl
	rule__Environment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getGroup_0()); }
	(rule__Environment__Group_0__0)?
	{ after(grammarAccess.getEnvironmentAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getEnvironmentAssignment_1()); }
	(rule__Environment__EnvironmentAssignment_1)*
	{ after(grammarAccess.getEnvironmentAccess().getEnvironmentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_0__0__Impl
	rule__Environment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getTheKeyword_0_0()); }
	'The'
	{ after(grammarAccess.getEnvironmentAccess().getTheKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_0__1__Impl
	rule__Environment__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getArenaKeyword_0_1()); }
	'arena'
	{ after(grammarAccess.getEnvironmentAccess().getArenaKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_0__2__Impl
	rule__Environment__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getContainsKeyword_0_2()); }
	'contains'
	{ after(grammarAccess.getEnvironmentAccess().getContainsKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_0__3__Impl
	rule__Environment__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getTheKeyword_0_3()); }
	'the'
	{ after(grammarAccess.getEnvironmentAccess().getTheKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_0__4__Impl
	rule__Environment__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getFollowingKeyword_0_4()); }
	'following'
	{ after(grammarAccess.getEnvironmentAccess().getFollowingKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_0__5__Impl
	rule__Environment__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getElementsKeyword_0_5()); }
	'elements'
	{ after(grammarAccess.getEnvironmentAccess().getElementsKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getColonKeyword_0_6()); }
	':'
	{ after(grammarAccess.getEnvironmentAccess().getColonKeyword_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProbabilisticDecription__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilisticDecription__Group__0__Impl
	rule__ProbabilisticDecription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilisticDecriptionAccess().getDistributedKeyword_0()); }
	'distributed'
	{ after(grammarAccess.getProbabilisticDecriptionAccess().getDistributedKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilisticDecription__Group__1__Impl
	rule__ProbabilisticDecription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilisticDecriptionAccess().getWithKeyword_1()); }
	'with'
	{ after(grammarAccess.getProbabilisticDecriptionAccess().getWithKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilisticDecription__Group__2__Impl
	rule__ProbabilisticDecription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilisticDecriptionAccess().getAKeyword_2()); }
	'a'
	{ after(grammarAccess.getProbabilisticDecriptionAccess().getAKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilisticDecription__Group__3__Impl
	rule__ProbabilisticDecription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilisticDecriptionAccess().getDisAssignment_3()); }
	(rule__ProbabilisticDecription__DisAssignment_3)
	{ after(grammarAccess.getProbabilisticDecriptionAccess().getDisAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilisticDecription__Group__4__Impl
	rule__ProbabilisticDecription__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilisticDecriptionAccess().getDistributionKeyword_4()); }
	'distribution'
	{ after(grammarAccess.getProbabilisticDecriptionAccess().getDistributionKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilisticDecription__Group__5__Impl
	rule__ProbabilisticDecription__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilisticDecriptionAccess().getInKeyword_5()); }
	'in'
	{ after(grammarAccess.getProbabilisticDecriptionAccess().getInKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilisticDecription__Group__6__Impl
	rule__ProbabilisticDecription__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilisticDecriptionAccess().getAKeyword_6()); }
	'a'
	{ after(grammarAccess.getProbabilisticDecriptionAccess().getAKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilisticDecription__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilisticDecriptionAccess().getKAssignment_7()); }
	(rule__ProbabilisticDecription__KAssignment_7)
	{ after(grammarAccess.getProbabilisticDecriptionAccess().getKAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Swarmconf__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__0__Impl
	rule__Swarmconf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getTheKeyword_0()); }
	'The'
	{ after(grammarAccess.getSwarmconfAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__1__Impl
	rule__Swarmconf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getRobotKeyword_1()); }
	'robot'
	{ after(grammarAccess.getSwarmconfAccess().getRobotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__2__Impl
	rule__Swarmconf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getSwarmKeyword_2()); }
	'swarm'
	{ after(grammarAccess.getSwarmconfAccess().getSwarmKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__3__Impl
	rule__Swarmconf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getConsistsKeyword_3()); }
	'consists'
	{ after(grammarAccess.getSwarmconfAccess().getConsistsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__4__Impl
	rule__Swarmconf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getOfKeyword_4()); }
	'of'
	{ after(grammarAccess.getSwarmconfAccess().getOfKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__5__Impl
	rule__Swarmconf__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getXAssignment_5()); }
	(rule__Swarmconf__XAssignment_5)
	{ after(grammarAccess.getSwarmconfAccess().getXAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__6__Impl
	rule__Swarmconf__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getRAssignment_6()); }
	(rule__Swarmconf__RAssignment_6)
	{ after(grammarAccess.getSwarmconfAccess().getRAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getPrAssignment_7()); }
	(rule__Swarmconf__PrAssignment_7)
	{ after(grammarAccess.getSwarmconfAccess().getPrAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getAggregateKeyword_0()); }
	'aggregate'
	{ after(grammarAccess.getTaskAccess().getAggregateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getOnKeyword_1()); }
	'on'
	{ after(grammarAccess.getTaskAccess().getOnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getRAssignment_2()); }
	(rule__Task__RAssignment_2)
	{ after(grammarAccess.getTaskAccess().getRAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MissionObjective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__0__Impl
	rule__MissionObjective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getTheKeyword_0()); }
	'The'
	{ after(grammarAccess.getMissionObjectiveAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__1__Impl
	rule__MissionObjective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getPerformanceKeyword_1()); }
	'performance'
	{ after(grammarAccess.getMissionObjectiveAccess().getPerformanceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__2__Impl
	rule__MissionObjective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getMeasureKeyword_2()); }
	'measure'
	{ after(grammarAccess.getMissionObjectiveAccess().getMeasureKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__3__Impl
	rule__MissionObjective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getIsKeyword_3()); }
	'is'
	{ after(grammarAccess.getMissionObjectiveAccess().getIsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__4__Impl
	rule__MissionObjective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getDefinedKeyword_4()); }
	'defined'
	{ after(grammarAccess.getMissionObjectiveAccess().getDefinedKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__5__Impl
	rule__MissionObjective__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getInKeyword_5()); }
	'in'
	{ after(grammarAccess.getMissionObjectiveAccess().getInKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__6__Impl
	rule__MissionObjective__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getTermsKeyword_6()); }
	'terms'
	{ after(grammarAccess.getMissionObjectiveAccess().getTermsKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__7__Impl
	rule__MissionObjective__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getOfKeyword_7()); }
	'of'
	{ after(grammarAccess.getMissionObjectiveAccess().getOfKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__8__Impl
	rule__MissionObjective__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getAnKeyword_8()); }
	'an'
	{ after(grammarAccess.getMissionObjectiveAccess().getAnKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__9__Impl
	rule__MissionObjective__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getObjectiveKeyword_9()); }
	'objective'
	{ after(grammarAccess.getMissionObjectiveAccess().getObjectiveKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__10__Impl
	rule__MissionObjective__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getFunctionKeyword_10()); }
	'function'
	{ after(grammarAccess.getMissionObjectiveAccess().getFunctionKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__11__Impl
	rule__MissionObjective__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getThatKeyword_11()); }
	'that'
	{ after(grammarAccess.getMissionObjectiveAccess().getThatKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__12__Impl
	rule__MissionObjective__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getMaximizesKeyword_12()); }
	'maximizes'
	{ after(grammarAccess.getMissionObjectiveAccess().getMaximizesKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__13__Impl
	rule__MissionObjective__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getTheKeyword_13()); }
	'the'
	{ after(grammarAccess.getMissionObjectiveAccess().getTheKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__14__Impl
	rule__MissionObjective__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getFollowingKeyword_14()); }
	'following'
	{ after(grammarAccess.getMissionObjectiveAccess().getFollowingKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__15__Impl
	rule__MissionObjective__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getScoreKeyword_15()); }
	'score'
	{ after(grammarAccess.getMissionObjectiveAccess().getScoreKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__16__Impl
	rule__MissionObjective__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getColonKeyword_16()); }
	':'
	{ after(grammarAccess.getMissionObjectiveAccess().getColonKeyword_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__17__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getInAssignment_17()); }
	(rule__MissionObjective__InAssignment_17)*
	{ after(grammarAccess.getMissionObjectiveAccess().getInAssignment_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Indicator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Indicator__Group__0__Impl
	rule__Indicator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Indicator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndicatorAccess().getSpAssignment_0()); }
	(rule__Indicator__SpAssignment_0)
	{ after(grammarAccess.getIndicatorAccess().getSpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indicator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Indicator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Indicator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndicatorAccess().getOcAssignment_1()); }
	(rule__Indicator__OcAssignment_1)
	{ after(grammarAccess.getIndicatorAccess().getOcAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicIndicator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicIndicator__Group__0__Impl
	rule__AtomicIndicator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicIndicator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicIndicatorAccess().getEachKeyword_0()); }
	'each'
	{ after(grammarAccess.getAtomicIndicatorAccess().getEachKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicIndicator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicIndicator__Group__1__Impl
	rule__AtomicIndicator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicIndicator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicIndicatorAccess().getRobotKeyword_1()); }
	'robot'
	{ after(grammarAccess.getAtomicIndicatorAccess().getRobotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicIndicator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicIndicator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicIndicator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicIndicatorAccess().getOcAssignment_2()); }
	(rule__AtomicIndicator__OcAssignment_2)
	{ after(grammarAccess.getAtomicIndicatorAccess().getOcAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundIndicator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundIndicator__Group__0__Impl
	rule__CompoundIndicator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundIndicator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundIndicatorAccess().getTheKeyword_0()); }
	'the'
	{ after(grammarAccess.getCompoundIndicatorAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundIndicator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundIndicator__Group__1__Impl
	rule__CompoundIndicator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundIndicator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundIndicatorAccess().getSwarmKeyword_1()); }
	'swarm'
	{ after(grammarAccess.getCompoundIndicatorAccess().getSwarmKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundIndicator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundIndicator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundIndicator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundIndicatorAccess().getOcAssignment_2()); }
	(rule__CompoundIndicator__OcAssignment_2)
	{ after(grammarAccess.getCompoundIndicatorAccess().getOcAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Penalty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Penalty__Group__0__Impl
	rule__Penalty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPenaltyAccess().getGetsKeyword_0()); }
	'gets'
	{ after(grammarAccess.getPenaltyAccess().getGetsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Penalty__Group__1__Impl
	rule__Penalty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPenaltyAccess().getAKeyword_1()); }
	'a'
	{ after(grammarAccess.getPenaltyAccess().getAKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Penalty__Group__2__Impl
	rule__Penalty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPenaltyAccess().getPenaltyKeyword_2()); }
	'penalty'
	{ after(grammarAccess.getPenaltyAccess().getPenaltyKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Penalty__Group__3__Impl
	rule__Penalty__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPenaltyAccess().getKAssignment_3()); }
	(rule__Penalty__KAssignment_3)
	{ after(grammarAccess.getPenaltyAccess().getKAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Penalty__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPenaltyAccess().getCAssignment_4()); }
	(rule__Penalty__CAssignment_4)
	{ after(grammarAccess.getPenaltyAccess().getCAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reward__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reward__Group__0__Impl
	rule__Reward__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRewardAccess().getGetsKeyword_0()); }
	'gets'
	{ after(grammarAccess.getRewardAccess().getGetsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reward__Group__1__Impl
	rule__Reward__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRewardAccess().getAKeyword_1()); }
	'a'
	{ after(grammarAccess.getRewardAccess().getAKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reward__Group__2__Impl
	rule__Reward__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRewardAccess().getRewardKeyword_2()); }
	'reward'
	{ after(grammarAccess.getRewardAccess().getRewardKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reward__Group__3__Impl
	rule__Reward__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRewardAccess().getKAssignment_3()); }
	(rule__Reward__KAssignment_3)
	{ after(grammarAccess.getRewardAccess().getKAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reward__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRewardAccess().getCAssignment_4()); }
	(rule__Reward__CAssignment_4)
	{ after(grammarAccess.getRewardAccess().getCAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__0__Impl
	rule__Condition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getIfKeyword_0_0()); }
	'if'
	{ after(grammarAccess.getConditionAccess().getIfKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__1__Impl
	rule__Condition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getItKeyword_0_1()); }
	'it'
	{ after(grammarAccess.getConditionAccess().getItKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__2__Impl
	rule__Condition__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getIsKeyword_0_2()); }
	'is'
	{ after(grammarAccess.getConditionAccess().getIsKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__3__Impl
	rule__Condition__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getOnKeyword_0_3()); }
	'on'
	{ after(grammarAccess.getConditionAccess().getOnKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__4__Impl
	rule__Condition__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getTheKeyword_0_4()); }
	'the'
	{ after(grammarAccess.getConditionAccess().getTheKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRAssignment_0_5()); }
	(rule__Condition__RAssignment_0_5)
	{ after(grammarAccess.getConditionAccess().getRAssignment_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__0__Impl
	rule__Condition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getIfKeyword_1_0()); }
	'if'
	{ after(grammarAccess.getConditionAccess().getIfKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__1__Impl
	rule__Condition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getThereKeyword_1_1()); }
	'there'
	{ after(grammarAccess.getConditionAccess().getThereKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__2__Impl
	rule__Condition__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getAreKeyword_1_2()); }
	'are'
	{ after(grammarAccess.getConditionAccess().getAreKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__3__Impl
	rule__Condition__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getMoreKeyword_1_3()); }
	'more'
	{ after(grammarAccess.getConditionAccess().getMoreKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__4__Impl
	rule__Condition__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getThanKeyword_1_4()); }
	'than'
	{ after(grammarAccess.getConditionAccess().getThanKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__5__Impl
	rule__Condition__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getNAssignment_1_5()); }
	(rule__Condition__NAssignment_1_5)
	{ after(grammarAccess.getConditionAccess().getNAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__6__Impl
	rule__Condition__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRobotsKeyword_1_6()); }
	'robots'
	{ after(grammarAccess.getConditionAccess().getRobotsKeyword_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__7__Impl
	rule__Condition__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getOnKeyword_1_7()); }
	'on'
	{ after(grammarAccess.getConditionAccess().getOnKeyword_1_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__8__Impl
	rule__Condition__Group_1__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getTheKeyword_1_8()); }
	'the'
	{ after(grammarAccess.getConditionAccess().getTheKeyword_1_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRAssignment_1_9()); }
	(rule__Condition__RAssignment_1_9)
	{ after(grammarAccess.getConditionAccess().getRAssignment_1_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementDescription__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementDescription__Group__0__Impl
	rule__ElementDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementDescriptionAccess().getElAssignment_0()); }
	(rule__ElementDescription__ElAssignment_0)
	{ after(grammarAccess.getElementDescriptionAccess().getElAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementDescription__Group__1__Impl
	rule__ElementDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementDescriptionAccess().getAreKeyword_1()); }
	'are'
	{ after(grammarAccess.getElementDescriptionAccess().getAreKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementDescription__Group__2__Impl
	rule__ElementDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementDescriptionAccess().getXAssignment_2()); }
	(rule__ElementDescription__XAssignment_2)
	{ after(grammarAccess.getElementDescriptionAccess().getXAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementDescription__Group__3__Impl
	rule__ElementDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementDescriptionAccess().getObjAssignment_3()); }
	(rule__ElementDescription__ObjAssignment_3)
	{ after(grammarAccess.getElementDescriptionAccess().getObjAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementDescription__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementDescriptionAccess().getRAssignment_4()); }
	(rule__ElementDescription__RAssignment_4)
	{ after(grammarAccess.getElementDescriptionAccess().getRAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__0__Impl
	rule__Element__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getLightKeyword_2_0()); }
	'light'
	{ after(grammarAccess.getElementAccess().getLightKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getSourcesKeyword_2_1()); }
	'sources'
	{ after(grammarAccess.getElementAccess().getSourcesKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__0__Impl
	rule__Object__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getObjAssignment_0()); }
	(rule__Object__ObjAssignment_0)
	{ after(grammarAccess.getObjectAccess().getObjAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__1__Impl
	rule__Object__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getObjectKeyword_1()); }
	'object'
	{ after(grammarAccess.getObjectAccess().getObjectKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__2__Impl
	rule__Object__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getObjectAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__3__Impl
	rule__Object__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getAKeyword_3()); }
	'a'
	{ after(grammarAccess.getObjectAccess().getAKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getRAssignment_4()); }
	(rule__Object__RAssignment_4)
	{ after(grammarAccess.getObjectAccess().getRAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Obstacle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstacle__Group__0__Impl
	rule__Obstacle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstacleAccess().getObsAssignment_0()); }
	(rule__Obstacle__ObsAssignment_0)
	{ after(grammarAccess.getObstacleAccess().getObsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstacle__Group__1__Impl
	rule__Obstacle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstacleAccess().getObstacleKeyword_1()); }
	'obstacle'
	{ after(grammarAccess.getObstacleAccess().getObstacleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstacle__Group__2__Impl
	rule__Obstacle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstacleAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getObstacleAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstacle__Group__3__Impl
	rule__Obstacle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstacleAccess().getAKeyword_3()); }
	'a'
	{ after(grammarAccess.getObstacleAccess().getAKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstacle__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstacleAccess().getRAssignment_4()); }
	(rule__Obstacle__RAssignment_4)
	{ after(grammarAccess.getObstacleAccess().getRAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Light__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__0__Impl
	rule__Light__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getLAssignment_0()); }
	(rule__Light__LAssignment_0)
	{ after(grammarAccess.getLightAccess().getLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__1__Impl
	rule__Light__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getLightKeyword_1()); }
	'light'
	{ after(grammarAccess.getLightAccess().getLightKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__2__Impl
	rule__Light__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getSourceKeyword_2()); }
	'source'
	{ after(grammarAccess.getLightAccess().getSourceKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__3__Impl
	rule__Light__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getEmittingKeyword_3()); }
	'emitting'
	{ after(grammarAccess.getLightAccess().getEmittingKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__4__Impl
	rule__Light__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getAKeyword_4()); }
	'a'
	{ after(grammarAccess.getLightAccess().getAKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__5__Impl
	rule__Light__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getCAssignment_5()); }
	(rule__Light__CAssignment_5)
	{ after(grammarAccess.getLightAccess().getCAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__6__Impl
	rule__Light__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getLightKeyword_6()); }
	'light'
	{ after(grammarAccess.getLightAccess().getLightKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__7__Impl
	rule__Light__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getIsKeyword_7()); }
	'is'
	{ after(grammarAccess.getLightAccess().getIsKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__8__Impl
	rule__Light__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getPlacedKeyword_8()); }
	'placed'
	{ after(grammarAccess.getLightAccess().getPlacedKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__9__Impl
	rule__Light__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getInKeyword_9()); }
	'in'
	{ after(grammarAccess.getLightAccess().getInKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__10__Impl
	rule__Light__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getAKeyword_10()); }
	'a'
	{ after(grammarAccess.getLightAccess().getAKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getPAssignment_11()); }
	(rule__Light__PAssignment_11)
	{ after(grammarAccess.getLightAccess().getPAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Position__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group_0__0__Impl
	rule__Position__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getCircleAction_0_0()); }
	()
	{ after(grammarAccess.getPositionAccess().getCircleAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group_0__1__Impl
	rule__Position__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getCenterKeyword_0_1()); }
	'center'
	{ after(grammarAccess.getPositionAccess().getCenterKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getPointAssignment_0_2()); }
	(rule__Position__PointAssignment_0_2)
	{ after(grammarAccess.getPositionAccess().getPointAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Position__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group_1__0__Impl
	rule__Position__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getRectangleAction_1_0()); }
	()
	{ after(grammarAccess.getPositionAccess().getRectangleAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group_1__1__Impl
	rule__Position__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getReferencePointKeyword_1_1()); }
	'reference point'
	{ after(grammarAccess.getPositionAccess().getReferencePointKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getPointAssignment_1_2()); }
	(rule__Position__PointAssignment_1_2)
	{ after(grammarAccess.getPositionAccess().getPointAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Position__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group_2__0__Impl
	rule__Position__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getPointDAction_2_0()); }
	()
	{ after(grammarAccess.getPositionAccess().getPointDAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group_2__1__Impl
	rule__Position__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getPointKeyword_2_1()); }
	'point'
	{ after(grammarAccess.getPositionAccess().getPointKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getPointAssignment_2_2()); }
	(rule__Position__PointAssignment_2_2)
	{ after(grammarAccess.getPositionAccess().getPointAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arena__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arena__Group__0__Impl
	rule__Arena__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArenaAccess().getTheKeyword_0()); }
	'The'
	{ after(grammarAccess.getArenaAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arena__Group__1__Impl
	rule__Arena__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArenaAccess().getArenaKeyword_1()); }
	'arena'
	{ after(grammarAccess.getArenaAccess().getArenaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arena__Group__2__Impl
	rule__Arena__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArenaAccess().getIsKeyword_2()); }
	'is'
	{ after(grammarAccess.getArenaAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arena__Group__3__Impl
	rule__Arena__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArenaAccess().getAKeyword_3()); }
	'a'
	{ after(grammarAccess.getArenaAccess().getAKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arena__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArenaAccess().getSAssignment_4()); }
	(rule__Arena__SAssignment_4)
	{ after(grammarAccess.getArenaAccess().getSAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__0__Impl
	rule__Region__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getColorsAssignment_0()); }
	(rule__Region__ColorsAssignment_0)?
	{ after(grammarAccess.getRegionAccess().getColorsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__1__Impl
	rule__Region__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getShapeAssignment_1()); }
	(rule__Region__ShapeAssignment_1)?
	{ after(grammarAccess.getRegionAccess().getShapeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__2__Impl
	rule__Region__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getNameAssignment_2()); }
	(rule__Region__NameAssignment_2)
	{ after(grammarAccess.getRegionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__3__Impl
	rule__Region__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getGroup_3()); }
	(rule__Region__Group_3__0)?
	{ after(grammarAccess.getRegionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getGroup_4()); }
	(rule__Region__Group_4__0)?
	{ after(grammarAccess.getRegionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group_3__0__Impl
	rule__Region__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getWithKeyword_3_0()); }
	'with'
	{ after(grammarAccess.getRegionAccess().getWithKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getReferencepointAssignment_3_1()); }
	(rule__Region__ReferencepointAssignment_3_1)
	{ after(grammarAccess.getRegionAccess().getReferencepointAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group_4__0__Impl
	rule__Region__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getAndKeyword_4_0()); }
	'and'
	{ after(grammarAccess.getRegionAccess().getAndKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getDimensionsAssignment_4_1()); }
	(rule__Region__DimensionsAssignment_4_1)
	{ after(grammarAccess.getRegionAccess().getDimensionsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CircleD__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CircleD__Group__0__Impl
	rule__CircleD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CircleD__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCircleDAccess().getRadiusKeyword_0()); }
	'radius'
	{ after(grammarAccess.getCircleDAccess().getRadiusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CircleD__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CircleD__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CircleD__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCircleDAccess().getRAssignment_1()); }
	(rule__CircleD__RAssignment_1)
	{ after(grammarAccess.getCircleDAccess().getRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RectangleD__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangleD__Group__0__Impl
	rule__RectangleD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleDAccess().getLengthKeyword_0()); }
	'length'
	{ after(grammarAccess.getRectangleDAccess().getLengthKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangleD__Group__1__Impl
	rule__RectangleD__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleDAccess().getLAssignment_1()); }
	(rule__RectangleD__LAssignment_1)
	{ after(grammarAccess.getRectangleDAccess().getLAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangleD__Group__2__Impl
	rule__RectangleD__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleDAccess().getWidthKeyword_2()); }
	',width'
	{ after(grammarAccess.getRectangleDAccess().getWidthKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangleD__Group__3__Impl
	rule__RectangleD__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleDAccess().getWAssignment_3()); }
	(rule__RectangleD__WAssignment_3)
	{ after(grammarAccess.getRectangleDAccess().getWAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangleD__Group__4__Impl
	rule__RectangleD__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleDAccess().getAndKeyword_4()); }
	'and'
	{ after(grammarAccess.getRectangleDAccess().getAndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangleD__Group__5__Impl
	rule__RectangleD__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleDAccess().getHeightKeyword_5()); }
	'height'
	{ after(grammarAccess.getRectangleDAccess().getHeightKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RectangleD__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRectangleDAccess().getHAssignment_6()); }
	(rule__RectangleD__HAssignment_6)
	{ after(grammarAccess.getRectangleDAccess().getHAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Coordinate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group__0__Impl
	rule__Coordinate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getXAssignment_0()); }
	(rule__Coordinate__XAssignment_0)
	{ after(grammarAccess.getCoordinateAccess().getXAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinateAccess().getYAssignment_1()); }
	(rule__Coordinate__YAssignment_1)
	{ after(grammarAccess.getCoordinateAccess().getYAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Double__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group__0__Impl
	rule__Double__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group__1__Impl
	rule__Double__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getDoubleAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Lowerbound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lowerbound__Group__0__Impl
	rule__Lowerbound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lowerbound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerboundAccess().getLessKeyword_0()); }
	'less'
	{ after(grammarAccess.getLowerboundAccess().getLessKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lowerbound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lowerbound__Group__1__Impl
	rule__Lowerbound__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Lowerbound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerboundAccess().getThanKeyword_1()); }
	'than'
	{ after(grammarAccess.getLowerboundAccess().getThanKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lowerbound__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lowerbound__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lowerbound__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerboundAccess().getNAssignment_2()); }
	(rule__Lowerbound__NAssignment_2)
	{ after(grammarAccess.getLowerboundAccess().getNAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LowerorEqualbound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerorEqualbound__Group__0__Impl
	rule__LowerorEqualbound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerorEqualboundAccess().getLessKeyword_0()); }
	'less'
	{ after(grammarAccess.getLowerorEqualboundAccess().getLessKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerorEqualbound__Group__1__Impl
	rule__LowerorEqualbound__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerorEqualboundAccess().getOrKeyword_1()); }
	'or'
	{ after(grammarAccess.getLowerorEqualboundAccess().getOrKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerorEqualbound__Group__2__Impl
	rule__LowerorEqualbound__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerorEqualboundAccess().getEqualKeyword_2()); }
	'equal'
	{ after(grammarAccess.getLowerorEqualboundAccess().getEqualKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerorEqualbound__Group__3__Impl
	rule__LowerorEqualbound__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerorEqualboundAccess().getThanKeyword_3()); }
	'than'
	{ after(grammarAccess.getLowerorEqualboundAccess().getThanKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerorEqualbound__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerorEqualboundAccess().getNAssignment_4()); }
	(rule__LowerorEqualbound__NAssignment_4)
	{ after(grammarAccess.getLowerorEqualboundAccess().getNAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Upperbound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Upperbound__Group__0__Impl
	rule__Upperbound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Upperbound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperboundAccess().getMoreKeyword_0()); }
	'more'
	{ after(grammarAccess.getUpperboundAccess().getMoreKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Upperbound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Upperbound__Group__1__Impl
	rule__Upperbound__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Upperbound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperboundAccess().getThanKeyword_1()); }
	'than'
	{ after(grammarAccess.getUpperboundAccess().getThanKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Upperbound__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Upperbound__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Upperbound__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperboundAccess().getNAssignment_2()); }
	(rule__Upperbound__NAssignment_2)
	{ after(grammarAccess.getUpperboundAccess().getNAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpperorEqualbound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperorEqualbound__Group__0__Impl
	rule__UpperorEqualbound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperorEqualboundAccess().getMoreKeyword_0()); }
	'more'
	{ after(grammarAccess.getUpperorEqualboundAccess().getMoreKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperorEqualbound__Group__1__Impl
	rule__UpperorEqualbound__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperorEqualboundAccess().getOrKeyword_1()); }
	'or'
	{ after(grammarAccess.getUpperorEqualboundAccess().getOrKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperorEqualbound__Group__2__Impl
	rule__UpperorEqualbound__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperorEqualboundAccess().getEqualKeyword_2()); }
	'equal'
	{ after(grammarAccess.getUpperorEqualboundAccess().getEqualKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperorEqualbound__Group__3__Impl
	rule__UpperorEqualbound__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperorEqualboundAccess().getThanKeyword_3()); }
	'than'
	{ after(grammarAccess.getUpperorEqualboundAccess().getThanKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperorEqualbound__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperorEqualboundAccess().getNAssignment_4()); }
	(rule__UpperorEqualbound__NAssignment_4)
	{ after(grammarAccess.getUpperorEqualboundAccess().getNAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group__0__Impl
	rule__Interval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getBetweenKeyword_0()); }
	'between'
	{ after(grammarAccess.getIntervalAccess().getBetweenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group__1__Impl
	rule__Interval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getMAssignment_1()); }
	(rule__Interval__MAssignment_1)
	{ after(grammarAccess.getIntervalAccess().getMAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group__2__Impl
	rule__Interval__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getAndKeyword_2()); }
	'and'
	{ after(grammarAccess.getIntervalAccess().getAndKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getNAssignment_3()); }
	(rule__Interval__NAssignment_3)
	{ after(grammarAccess.getIntervalAccess().getNAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ArenasAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getArenasArenaParserRuleCall_0_0()); }
		ruleArena
		{ after(grammarAccess.getModelAccess().getArenasArenaParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__EnvAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEnvEnvironmentParserRuleCall_1_0()); }
		ruleEnvironment
		{ after(grammarAccess.getModelAccess().getEnvEnvironmentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SwAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSwSwarmconfParserRuleCall_2_0()); }
		ruleSwarmconf
		{ after(grammarAccess.getModelAccess().getSwSwarmconfParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ObAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getObMissionObjectiveParserRuleCall_3_0()); }
		ruleMissionObjective
		{ after(grammarAccess.getModelAccess().getObMissionObjectiveParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__EnvironmentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentAccess().getEnvironmentEnvironmentElementsParserRuleCall_1_0()); }
		ruleEnvironmentElements
		{ after(grammarAccess.getEnvironmentAccess().getEnvironmentEnvironmentElementsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__DisAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbabilisticDecriptionAccess().getDisDistributionParserRuleCall_3_0()); }
		ruleDistribution
		{ after(grammarAccess.getProbabilisticDecriptionAccess().getDisDistributionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__KAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbabilisticDecriptionAccess().getKRegionParserRuleCall_7_0()); }
		ruleRegion
		{ after(grammarAccess.getProbabilisticDecriptionAccess().getKRegionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__XAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwarmconfAccess().getXRangeParserRuleCall_5_0()); }
		ruleRange
		{ after(grammarAccess.getSwarmconfAccess().getXRangeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__RAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwarmconfAccess().getRRobotParserRuleCall_6_0()); }
		ruleRobot
		{ after(grammarAccess.getSwarmconfAccess().getRRobotParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__PrAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwarmconfAccess().getPrProbabilisticDecriptionParserRuleCall_7_0()); }
		ruleProbabilisticDecription
		{ after(grammarAccess.getSwarmconfAccess().getPrProbabilisticDecriptionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__RAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getRRegionParserRuleCall_2_0()); }
		ruleRegion
		{ after(grammarAccess.getTaskAccess().getRRegionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__InAssignment_17
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionObjectiveAccess().getInIndicatorParserRuleCall_17_0()); }
		ruleIndicator
		{ after(grammarAccess.getMissionObjectiveAccess().getInIndicatorParserRuleCall_17_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indicator__SpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndicatorAccess().getSpScopeParserRuleCall_0_0()); }
		ruleScope
		{ after(grammarAccess.getIndicatorAccess().getSpScopeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indicator__OcAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndicatorAccess().getOcAlternatives_1_0()); }
		(rule__Indicator__OcAlternatives_1_0)
		{ after(grammarAccess.getIndicatorAccess().getOcAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicIndicator__OcAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicIndicatorAccess().getOcOccurenceParserRuleCall_2_0()); }
		ruleOccurence
		{ after(grammarAccess.getAtomicIndicatorAccess().getOcOccurenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundIndicator__OcAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompoundIndicatorAccess().getOcOccurenceParserRuleCall_2_0()); }
		ruleOccurence
		{ after(grammarAccess.getCompoundIndicatorAccess().getOcOccurenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__SpAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getSpAlternatives_0()); }
		(rule__Scope__SpAlternatives_0)
		{ after(grammarAccess.getScopeAccess().getSpAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__KAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPenaltyAccess().getKDoubleParserRuleCall_3_0()); }
		ruleDouble
		{ after(grammarAccess.getPenaltyAccess().getKDoubleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__CAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPenaltyAccess().getCConditionParserRuleCall_4_0()); }
		ruleCondition
		{ after(grammarAccess.getPenaltyAccess().getCConditionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__KAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRewardAccess().getKDoubleParserRuleCall_3_0()); }
		ruleDouble
		{ after(grammarAccess.getRewardAccess().getKDoubleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__CAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRewardAccess().getCConditionParserRuleCall_4_0()); }
		ruleCondition
		{ after(grammarAccess.getRewardAccess().getCConditionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__RAssignment_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getRRegionParserRuleCall_0_5_0()); }
		ruleRegion
		{ after(grammarAccess.getConditionAccess().getRRegionParserRuleCall_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__NAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getNINTTerminalRuleCall_1_5_0()); }
		RULE_INT
		{ after(grammarAccess.getConditionAccess().getNINTTerminalRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__RAssignment_1_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getRRegionParserRuleCall_1_9_0()); }
		ruleRegion
		{ after(grammarAccess.getConditionAccess().getRRegionParserRuleCall_1_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__ElAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementDescriptionAccess().getElThereKeyword_0_0()); }
		(
			{ before(grammarAccess.getElementDescriptionAccess().getElThereKeyword_0_0()); }
			'There'
			{ after(grammarAccess.getElementDescriptionAccess().getElThereKeyword_0_0()); }
		)
		{ after(grammarAccess.getElementDescriptionAccess().getElThereKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__XAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementDescriptionAccess().getXRangeParserRuleCall_2_0()); }
		ruleRange
		{ after(grammarAccess.getElementDescriptionAccess().getXRangeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__ObjAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementDescriptionAccess().getObjElementParserRuleCall_3_0()); }
		ruleElement
		{ after(grammarAccess.getElementDescriptionAccess().getObjElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__RAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementDescriptionAccess().getRProbabilisticDecriptionParserRuleCall_4_0()); }
		ruleProbabilisticDecription
		{ after(grammarAccess.getElementDescriptionAccess().getRProbabilisticDecriptionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__ObjAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getObjAnKeyword_0_0()); }
		(
			{ before(grammarAccess.getObjectAccess().getObjAnKeyword_0_0()); }
			'An'
			{ after(grammarAccess.getObjectAccess().getObjAnKeyword_0_0()); }
		)
		{ after(grammarAccess.getObjectAccess().getObjAnKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__RAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getRRegionParserRuleCall_4_0()); }
		ruleRegion
		{ after(grammarAccess.getObjectAccess().getRRegionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__ObsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObstacleAccess().getObsAnKeyword_0_0()); }
		(
			{ before(grammarAccess.getObstacleAccess().getObsAnKeyword_0_0()); }
			'An'
			{ after(grammarAccess.getObstacleAccess().getObsAnKeyword_0_0()); }
		)
		{ after(grammarAccess.getObstacleAccess().getObsAnKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__RAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObstacleAccess().getRRegionParserRuleCall_4_0()); }
		ruleRegion
		{ after(grammarAccess.getObstacleAccess().getRRegionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__LAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightAccess().getLAKeyword_0_0()); }
		(
			{ before(grammarAccess.getLightAccess().getLAKeyword_0_0()); }
			'A'
			{ after(grammarAccess.getLightAccess().getLAKeyword_0_0()); }
		)
		{ after(grammarAccess.getLightAccess().getLAKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__CAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightAccess().getCColorParserRuleCall_5_0()); }
		ruleColor
		{ after(grammarAccess.getLightAccess().getCColorParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__PAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightAccess().getPPositionParserRuleCall_11_0()); }
		rulePosition
		{ after(grammarAccess.getLightAccess().getPPositionParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__PointAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionAccess().getPointCoordinateParserRuleCall_0_2_0()); }
		ruleCoordinate
		{ after(grammarAccess.getPositionAccess().getPointCoordinateParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__PointAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionAccess().getPointCoordinateParserRuleCall_1_2_0()); }
		ruleCoordinate
		{ after(grammarAccess.getPositionAccess().getPointCoordinateParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__PointAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionAccess().getPointCoordinateParserRuleCall_2_2_0()); }
		ruleCoordinate
		{ after(grammarAccess.getPositionAccess().getPointCoordinateParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__SAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArenaAccess().getSRegionParserRuleCall_4_0()); }
		ruleRegion
		{ after(grammarAccess.getArenaAccess().getSRegionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__ColorsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegionAccess().getColorsColorParserRuleCall_0_0()); }
		ruleColor
		{ after(grammarAccess.getRegionAccess().getColorsColorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__ShapeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegionAccess().getShapeShapeParserRuleCall_1_0()); }
		ruleShape
		{ after(grammarAccess.getRegionAccess().getShapeShapeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getRegionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__ReferencepointAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegionAccess().getReferencepointPositionParserRuleCall_3_1_0()); }
		rulePosition
		{ after(grammarAccess.getRegionAccess().getReferencepointPositionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__DimensionsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegionAccess().getDimensionsDimensionParserRuleCall_4_1_0()); }
		ruleDimension
		{ after(grammarAccess.getRegionAccess().getDimensionsDimensionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CircleD__RAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCircleDAccess().getRDoubleParserRuleCall_1_0()); }
		ruleDouble
		{ after(grammarAccess.getCircleDAccess().getRDoubleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__LAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectangleDAccess().getLDoubleParserRuleCall_1_0()); }
		ruleDouble
		{ after(grammarAccess.getRectangleDAccess().getLDoubleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__WAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectangleDAccess().getWDoubleParserRuleCall_3_0()); }
		ruleDouble
		{ after(grammarAccess.getRectangleDAccess().getWDoubleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RectangleD__HAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRectangleDAccess().getHDoubleParserRuleCall_6_0()); }
		ruleDouble
		{ after(grammarAccess.getRectangleDAccess().getHDoubleParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__XAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinateAccess().getXDoubleParserRuleCall_0_0()); }
		ruleDouble
		{ after(grammarAccess.getCoordinateAccess().getXDoubleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate__YAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinateAccess().getYDoubleParserRuleCall_1_0()); }
		ruleDouble
		{ after(grammarAccess.getCoordinateAccess().getYDoubleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantSize__NAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantSizeAccess().getNINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getConstantSizeAccess().getNINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lowerbound__NAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLowerboundAccess().getNINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getLowerboundAccess().getNINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__NAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLowerorEqualboundAccess().getNINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getLowerorEqualboundAccess().getNINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Upperbound__NAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpperboundAccess().getNINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getUpperboundAccess().getNINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__NAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpperorEqualboundAccess().getNINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getUpperorEqualboundAccess().getNINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__MAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getMINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIntervalAccess().getMINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__NAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getNINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getIntervalAccess().getNINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolLiteralAccess().getValueAlternatives_0()); }
		(rule__BoolLiteral__ValueAlternatives_0)
		{ after(grammarAccess.getBoolLiteralAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
