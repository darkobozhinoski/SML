/**
 * generated by Xtext 2.16.0
 */
package org.xtext.example.sml.sml.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.sml.sml.Dimension;
import org.xtext.example.sml.sml.Position;
import org.xtext.example.sml.sml.Region;
import org.xtext.example.sml.sml.SmlPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Region</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.sml.sml.impl.RegionImpl#getColors <em>Colors</em>}</li>
 *   <li>{@link org.xtext.example.sml.sml.impl.RegionImpl#getShape <em>Shape</em>}</li>
 *   <li>{@link org.xtext.example.sml.sml.impl.RegionImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.sml.sml.impl.RegionImpl#getReferencepoint <em>Referencepoint</em>}</li>
 *   <li>{@link org.xtext.example.sml.sml.impl.RegionImpl#getDimensions <em>Dimensions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RegionImpl extends MinimalEObjectImpl.Container implements Region
{
  /**
   * The default value of the '{@link #getColors() <em>Colors</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColors()
   * @generated
   * @ordered
   */
  protected static final String COLORS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getColors() <em>Colors</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColors()
   * @generated
   * @ordered
   */
  protected String colors = COLORS_EDEFAULT;

  /**
   * The default value of the '{@link #getShape() <em>Shape</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShape()
   * @generated
   * @ordered
   */
  protected static final String SHAPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getShape() <em>Shape</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShape()
   * @generated
   * @ordered
   */
  protected String shape = SHAPE_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getReferencepoint() <em>Referencepoint</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReferencepoint()
   * @generated
   * @ordered
   */
  protected Position referencepoint;

  /**
   * The cached value of the '{@link #getDimensions() <em>Dimensions</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDimensions()
   * @generated
   * @ordered
   */
  protected Dimension dimensions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RegionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SmlPackage.Literals.REGION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getColors()
  {
    return colors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setColors(String newColors)
  {
    String oldColors = colors;
    colors = newColors;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.REGION__COLORS, oldColors, colors));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getShape()
  {
    return shape;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setShape(String newShape)
  {
    String oldShape = shape;
    shape = newShape;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.REGION__SHAPE, oldShape, shape));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.REGION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Position getReferencepoint()
  {
    return referencepoint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReferencepoint(Position newReferencepoint, NotificationChain msgs)
  {
    Position oldReferencepoint = referencepoint;
    referencepoint = newReferencepoint;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmlPackage.REGION__REFERENCEPOINT, oldReferencepoint, newReferencepoint);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReferencepoint(Position newReferencepoint)
  {
    if (newReferencepoint != referencepoint)
    {
      NotificationChain msgs = null;
      if (referencepoint != null)
        msgs = ((InternalEObject)referencepoint).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmlPackage.REGION__REFERENCEPOINT, null, msgs);
      if (newReferencepoint != null)
        msgs = ((InternalEObject)newReferencepoint).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmlPackage.REGION__REFERENCEPOINT, null, msgs);
      msgs = basicSetReferencepoint(newReferencepoint, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.REGION__REFERENCEPOINT, newReferencepoint, newReferencepoint));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Dimension getDimensions()
  {
    return dimensions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDimensions(Dimension newDimensions, NotificationChain msgs)
  {
    Dimension oldDimensions = dimensions;
    dimensions = newDimensions;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmlPackage.REGION__DIMENSIONS, oldDimensions, newDimensions);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDimensions(Dimension newDimensions)
  {
    if (newDimensions != dimensions)
    {
      NotificationChain msgs = null;
      if (dimensions != null)
        msgs = ((InternalEObject)dimensions).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmlPackage.REGION__DIMENSIONS, null, msgs);
      if (newDimensions != null)
        msgs = ((InternalEObject)newDimensions).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmlPackage.REGION__DIMENSIONS, null, msgs);
      msgs = basicSetDimensions(newDimensions, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.REGION__DIMENSIONS, newDimensions, newDimensions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SmlPackage.REGION__REFERENCEPOINT:
        return basicSetReferencepoint(null, msgs);
      case SmlPackage.REGION__DIMENSIONS:
        return basicSetDimensions(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SmlPackage.REGION__COLORS:
        return getColors();
      case SmlPackage.REGION__SHAPE:
        return getShape();
      case SmlPackage.REGION__NAME:
        return getName();
      case SmlPackage.REGION__REFERENCEPOINT:
        return getReferencepoint();
      case SmlPackage.REGION__DIMENSIONS:
        return getDimensions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SmlPackage.REGION__COLORS:
        setColors((String)newValue);
        return;
      case SmlPackage.REGION__SHAPE:
        setShape((String)newValue);
        return;
      case SmlPackage.REGION__NAME:
        setName((String)newValue);
        return;
      case SmlPackage.REGION__REFERENCEPOINT:
        setReferencepoint((Position)newValue);
        return;
      case SmlPackage.REGION__DIMENSIONS:
        setDimensions((Dimension)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SmlPackage.REGION__COLORS:
        setColors(COLORS_EDEFAULT);
        return;
      case SmlPackage.REGION__SHAPE:
        setShape(SHAPE_EDEFAULT);
        return;
      case SmlPackage.REGION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case SmlPackage.REGION__REFERENCEPOINT:
        setReferencepoint((Position)null);
        return;
      case SmlPackage.REGION__DIMENSIONS:
        setDimensions((Dimension)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SmlPackage.REGION__COLORS:
        return COLORS_EDEFAULT == null ? colors != null : !COLORS_EDEFAULT.equals(colors);
      case SmlPackage.REGION__SHAPE:
        return SHAPE_EDEFAULT == null ? shape != null : !SHAPE_EDEFAULT.equals(shape);
      case SmlPackage.REGION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case SmlPackage.REGION__REFERENCEPOINT:
        return referencepoint != null;
      case SmlPackage.REGION__DIMENSIONS:
        return dimensions != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (colors: ");
    result.append(colors);
    result.append(", shape: ");
    result.append(shape);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //RegionImpl
