/**
 * generated by Xtext 2.21.0
 */
package org.xtext.example.sml.sml.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.sml.sml.Mission;
import org.xtext.example.sml.sml.MissionObjective;
import org.xtext.example.sml.sml.MissionSpecification;
import org.xtext.example.sml.sml.MissionTime;
import org.xtext.example.sml.sml.SmlPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Mission Specification</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.sml.sml.impl.MissionSpecificationImpl#getM <em>M</em>}</li>
 *   <li>{@link org.xtext.example.sml.sml.impl.MissionSpecificationImpl#getMt <em>Mt</em>}</li>
 *   <li>{@link org.xtext.example.sml.sml.impl.MissionSpecificationImpl#getOb <em>Ob</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MissionSpecificationImpl extends MinimalEObjectImpl.Container implements MissionSpecification
{
  /**
   * The cached value of the '{@link #getM() <em>M</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getM()
   * @generated
   * @ordered
   */
  protected Mission m;

  /**
   * The cached value of the '{@link #getMt() <em>Mt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMt()
   * @generated
   * @ordered
   */
  protected MissionTime mt;

  /**
   * The cached value of the '{@link #getOb() <em>Ob</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOb()
   * @generated
   * @ordered
   */
  protected MissionObjective ob;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MissionSpecificationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SmlPackage.Literals.MISSION_SPECIFICATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Mission getM()
  {
    return m;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetM(Mission newM, NotificationChain msgs)
  {
    Mission oldM = m;
    m = newM;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmlPackage.MISSION_SPECIFICATION__M, oldM, newM);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setM(Mission newM)
  {
    if (newM != m)
    {
      NotificationChain msgs = null;
      if (m != null)
        msgs = ((InternalEObject)m).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmlPackage.MISSION_SPECIFICATION__M, null, msgs);
      if (newM != null)
        msgs = ((InternalEObject)newM).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmlPackage.MISSION_SPECIFICATION__M, null, msgs);
      msgs = basicSetM(newM, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.MISSION_SPECIFICATION__M, newM, newM));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MissionTime getMt()
  {
    return mt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMt(MissionTime newMt, NotificationChain msgs)
  {
    MissionTime oldMt = mt;
    mt = newMt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmlPackage.MISSION_SPECIFICATION__MT, oldMt, newMt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMt(MissionTime newMt)
  {
    if (newMt != mt)
    {
      NotificationChain msgs = null;
      if (mt != null)
        msgs = ((InternalEObject)mt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmlPackage.MISSION_SPECIFICATION__MT, null, msgs);
      if (newMt != null)
        msgs = ((InternalEObject)newMt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmlPackage.MISSION_SPECIFICATION__MT, null, msgs);
      msgs = basicSetMt(newMt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.MISSION_SPECIFICATION__MT, newMt, newMt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MissionObjective getOb()
  {
    return ob;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOb(MissionObjective newOb, NotificationChain msgs)
  {
    MissionObjective oldOb = ob;
    ob = newOb;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmlPackage.MISSION_SPECIFICATION__OB, oldOb, newOb);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOb(MissionObjective newOb)
  {
    if (newOb != ob)
    {
      NotificationChain msgs = null;
      if (ob != null)
        msgs = ((InternalEObject)ob).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmlPackage.MISSION_SPECIFICATION__OB, null, msgs);
      if (newOb != null)
        msgs = ((InternalEObject)newOb).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmlPackage.MISSION_SPECIFICATION__OB, null, msgs);
      msgs = basicSetOb(newOb, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.MISSION_SPECIFICATION__OB, newOb, newOb));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SmlPackage.MISSION_SPECIFICATION__M:
        return basicSetM(null, msgs);
      case SmlPackage.MISSION_SPECIFICATION__MT:
        return basicSetMt(null, msgs);
      case SmlPackage.MISSION_SPECIFICATION__OB:
        return basicSetOb(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SmlPackage.MISSION_SPECIFICATION__M:
        return getM();
      case SmlPackage.MISSION_SPECIFICATION__MT:
        return getMt();
      case SmlPackage.MISSION_SPECIFICATION__OB:
        return getOb();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SmlPackage.MISSION_SPECIFICATION__M:
        setM((Mission)newValue);
        return;
      case SmlPackage.MISSION_SPECIFICATION__MT:
        setMt((MissionTime)newValue);
        return;
      case SmlPackage.MISSION_SPECIFICATION__OB:
        setOb((MissionObjective)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SmlPackage.MISSION_SPECIFICATION__M:
        setM((Mission)null);
        return;
      case SmlPackage.MISSION_SPECIFICATION__MT:
        setMt((MissionTime)null);
        return;
      case SmlPackage.MISSION_SPECIFICATION__OB:
        setOb((MissionObjective)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SmlPackage.MISSION_SPECIFICATION__M:
        return m != null;
      case SmlPackage.MISSION_SPECIFICATION__MT:
        return mt != null;
      case SmlPackage.MISSION_SPECIFICATION__OB:
        return ob != null;
    }
    return super.eIsSet(featureID);
  }

} //MissionSpecificationImpl
