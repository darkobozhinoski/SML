/**
 * generated by Xtext 2.19.0
 */
package org.xtext.example.sml.sml.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.sml.sml.Arena;
import org.xtext.example.sml.sml.Environment;
import org.xtext.example.sml.sml.MissionSpecification;
import org.xtext.example.sml.sml.Model;
import org.xtext.example.sml.sml.SmlPackage;
import org.xtext.example.sml.sml.Swarmconf;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.sml.sml.impl.ModelImpl#getArenas <em>Arenas</em>}</li>
 *   <li>{@link org.xtext.example.sml.sml.impl.ModelImpl#getEnv <em>Env</em>}</li>
 *   <li>{@link org.xtext.example.sml.sml.impl.ModelImpl#getSw <em>Sw</em>}</li>
 *   <li>{@link org.xtext.example.sml.sml.impl.ModelImpl#getMs <em>Ms</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getArenas() <em>Arenas</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArenas()
   * @generated
   * @ordered
   */
  protected Arena arenas;

  /**
   * The cached value of the '{@link #getEnv() <em>Env</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnv()
   * @generated
   * @ordered
   */
  protected Environment env;

  /**
   * The cached value of the '{@link #getSw() <em>Sw</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSw()
   * @generated
   * @ordered
   */
  protected Swarmconf sw;

  /**
   * The cached value of the '{@link #getMs() <em>Ms</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMs()
   * @generated
   * @ordered
   */
  protected MissionSpecification ms;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SmlPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Arena getArenas()
  {
    return arenas;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArenas(Arena newArenas, NotificationChain msgs)
  {
    Arena oldArenas = arenas;
    arenas = newArenas;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmlPackage.MODEL__ARENAS, oldArenas, newArenas);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArenas(Arena newArenas)
  {
    if (newArenas != arenas)
    {
      NotificationChain msgs = null;
      if (arenas != null)
        msgs = ((InternalEObject)arenas).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmlPackage.MODEL__ARENAS, null, msgs);
      if (newArenas != null)
        msgs = ((InternalEObject)newArenas).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmlPackage.MODEL__ARENAS, null, msgs);
      msgs = basicSetArenas(newArenas, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.MODEL__ARENAS, newArenas, newArenas));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Environment getEnv()
  {
    return env;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEnv(Environment newEnv, NotificationChain msgs)
  {
    Environment oldEnv = env;
    env = newEnv;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmlPackage.MODEL__ENV, oldEnv, newEnv);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnv(Environment newEnv)
  {
    if (newEnv != env)
    {
      NotificationChain msgs = null;
      if (env != null)
        msgs = ((InternalEObject)env).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmlPackage.MODEL__ENV, null, msgs);
      if (newEnv != null)
        msgs = ((InternalEObject)newEnv).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmlPackage.MODEL__ENV, null, msgs);
      msgs = basicSetEnv(newEnv, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.MODEL__ENV, newEnv, newEnv));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Swarmconf getSw()
  {
    return sw;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSw(Swarmconf newSw, NotificationChain msgs)
  {
    Swarmconf oldSw = sw;
    sw = newSw;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmlPackage.MODEL__SW, oldSw, newSw);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSw(Swarmconf newSw)
  {
    if (newSw != sw)
    {
      NotificationChain msgs = null;
      if (sw != null)
        msgs = ((InternalEObject)sw).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmlPackage.MODEL__SW, null, msgs);
      if (newSw != null)
        msgs = ((InternalEObject)newSw).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmlPackage.MODEL__SW, null, msgs);
      msgs = basicSetSw(newSw, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.MODEL__SW, newSw, newSw));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MissionSpecification getMs()
  {
    return ms;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMs(MissionSpecification newMs, NotificationChain msgs)
  {
    MissionSpecification oldMs = ms;
    ms = newMs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmlPackage.MODEL__MS, oldMs, newMs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMs(MissionSpecification newMs)
  {
    if (newMs != ms)
    {
      NotificationChain msgs = null;
      if (ms != null)
        msgs = ((InternalEObject)ms).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmlPackage.MODEL__MS, null, msgs);
      if (newMs != null)
        msgs = ((InternalEObject)newMs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmlPackage.MODEL__MS, null, msgs);
      msgs = basicSetMs(newMs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.MODEL__MS, newMs, newMs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SmlPackage.MODEL__ARENAS:
        return basicSetArenas(null, msgs);
      case SmlPackage.MODEL__ENV:
        return basicSetEnv(null, msgs);
      case SmlPackage.MODEL__SW:
        return basicSetSw(null, msgs);
      case SmlPackage.MODEL__MS:
        return basicSetMs(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SmlPackage.MODEL__ARENAS:
        return getArenas();
      case SmlPackage.MODEL__ENV:
        return getEnv();
      case SmlPackage.MODEL__SW:
        return getSw();
      case SmlPackage.MODEL__MS:
        return getMs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SmlPackage.MODEL__ARENAS:
        setArenas((Arena)newValue);
        return;
      case SmlPackage.MODEL__ENV:
        setEnv((Environment)newValue);
        return;
      case SmlPackage.MODEL__SW:
        setSw((Swarmconf)newValue);
        return;
      case SmlPackage.MODEL__MS:
        setMs((MissionSpecification)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SmlPackage.MODEL__ARENAS:
        setArenas((Arena)null);
        return;
      case SmlPackage.MODEL__ENV:
        setEnv((Environment)null);
        return;
      case SmlPackage.MODEL__SW:
        setSw((Swarmconf)null);
        return;
      case SmlPackage.MODEL__MS:
        setMs((MissionSpecification)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SmlPackage.MODEL__ARENAS:
        return arenas != null;
      case SmlPackage.MODEL__ENV:
        return env != null;
      case SmlPackage.MODEL__SW:
        return sw != null;
      case SmlPackage.MODEL__MS:
        return ms != null;
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
