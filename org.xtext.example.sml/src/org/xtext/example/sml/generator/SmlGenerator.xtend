/*
 * generated by Xtext 2.16.0
 */
package org.xtext.example.sml.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext

import org.eclipse.xtext.naming.IQualifiedNameProvider


import com.google.inject.Inject
import org.xtext.example.sml.sml.Model
import org.xtext.example.sml.sml.Arena
import org.xtext.example.sml.sml.Coordinate2D
import org.xtext.example.sml.sml.Coordinate3D

import org.xtext.example.sml.sml.Dimension
//import org.xtext.example.sml.sml.RectnagleD
import org.xtext.example.sml.sml.Region
import org.xtext.example.sml.sml.Arena
import org.xtext.example.sml.sml.Position

import org.xtext.example.sml.sml.Swarmconf

import org.xtext.example.sml.sml.Light
import org.xtext.example.sml.sml.Obstacle
import org.xtext.example.sml.sml.Object
import org.xtext.example.sml.sml.EnvironmentElement
import org.xtext.example.sml.sml.EnvironmentElements
import org.xtext.example.sml.sml.ProbabilisticDecription
import org.xtext.example.sml.sml.Environment
import org.xtext.example.sml.sml.ElementDescription
import org.xtext.example.sml.sml.MissionObjective
import org.xtext.example.sml.sml.Reward
import org.xtext.example.sml.sml.Indicator
import org.xtext.example.sml.sml.AtomicIndicator
import org.xtext.example.sml.sml.Scope
import org.xtext.example.sml.sml.Occurence
import org.xtext.example.sml.sml.Penalty
import org.xtext.example.sml.sml.Condition
import org.xtext.example.sml.sml.CompoundIndicator
import java.util.Random;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class SmlGenerator extends AbstractGenerator {
	@Inject extension IQualifiedNameProvider
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))


     val model = resource.contents.head as Model
     var model1 =resource.contents.head as Model
	}
	}
      