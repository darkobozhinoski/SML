/**
 * generated by Xtext 2.16.0
 */
package org.xtext.example.sml.sml.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.sml.sml.Region;
import org.xtext.example.sml.sml.RegionDefinition;
import org.xtext.example.sml.sml.SmlPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Region</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.sml.sml.impl.RegionImpl#getColors <em>Colors</em>}</li>
 *   <li>{@link org.xtext.example.sml.sml.impl.RegionImpl#getShape2d <em>Shape2d</em>}</li>
 *   <li>{@link org.xtext.example.sml.sml.impl.RegionImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.sml.sml.impl.RegionImpl#getRegion <em>Region</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RegionImpl extends EnvironmentElementImpl implements Region
{
  /**
   * The default value of the '{@link #getColors() <em>Colors</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColors()
   * @generated
   * @ordered
   */
  protected static final String COLORS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getColors() <em>Colors</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColors()
   * @generated
   * @ordered
   */
  protected String colors = COLORS_EDEFAULT;

  /**
   * The default value of the '{@link #getShape2d() <em>Shape2d</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShape2d()
   * @generated
   * @ordered
   */
  protected static final String SHAPE2D_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getShape2d() <em>Shape2d</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShape2d()
   * @generated
   * @ordered
   */
  protected String shape2d = SHAPE2D_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getRegion() <em>Region</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegion()
   * @generated
   * @ordered
   */
  protected RegionDefinition region;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RegionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SmlPackage.Literals.REGION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getColors()
  {
    return colors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setColors(String newColors)
  {
    String oldColors = colors;
    colors = newColors;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.REGION__COLORS, oldColors, colors));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getShape2d()
  {
    return shape2d;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setShape2d(String newShape2d)
  {
    String oldShape2d = shape2d;
    shape2d = newShape2d;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.REGION__SHAPE2D, oldShape2d, shape2d));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.REGION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RegionDefinition getRegion()
  {
    return region;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRegion(RegionDefinition newRegion, NotificationChain msgs)
  {
    RegionDefinition oldRegion = region;
    region = newRegion;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmlPackage.REGION__REGION, oldRegion, newRegion);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRegion(RegionDefinition newRegion)
  {
    if (newRegion != region)
    {
      NotificationChain msgs = null;
      if (region != null)
        msgs = ((InternalEObject)region).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmlPackage.REGION__REGION, null, msgs);
      if (newRegion != null)
        msgs = ((InternalEObject)newRegion).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmlPackage.REGION__REGION, null, msgs);
      msgs = basicSetRegion(newRegion, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmlPackage.REGION__REGION, newRegion, newRegion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SmlPackage.REGION__REGION:
        return basicSetRegion(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SmlPackage.REGION__COLORS:
        return getColors();
      case SmlPackage.REGION__SHAPE2D:
        return getShape2d();
      case SmlPackage.REGION__NAME:
        return getName();
      case SmlPackage.REGION__REGION:
        return getRegion();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SmlPackage.REGION__COLORS:
        setColors((String)newValue);
        return;
      case SmlPackage.REGION__SHAPE2D:
        setShape2d((String)newValue);
        return;
      case SmlPackage.REGION__NAME:
        setName((String)newValue);
        return;
      case SmlPackage.REGION__REGION:
        setRegion((RegionDefinition)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SmlPackage.REGION__COLORS:
        setColors(COLORS_EDEFAULT);
        return;
      case SmlPackage.REGION__SHAPE2D:
        setShape2d(SHAPE2D_EDEFAULT);
        return;
      case SmlPackage.REGION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case SmlPackage.REGION__REGION:
        setRegion((RegionDefinition)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SmlPackage.REGION__COLORS:
        return COLORS_EDEFAULT == null ? colors != null : !COLORS_EDEFAULT.equals(colors);
      case SmlPackage.REGION__SHAPE2D:
        return SHAPE2D_EDEFAULT == null ? shape2d != null : !SHAPE2D_EDEFAULT.equals(shape2d);
      case SmlPackage.REGION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case SmlPackage.REGION__REGION:
        return region != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (colors: ");
    result.append(colors);
    result.append(", shape2d: ");
    result.append(shape2d);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //RegionImpl
