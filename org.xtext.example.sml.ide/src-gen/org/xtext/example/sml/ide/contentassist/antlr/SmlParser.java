/*
 * generated by Xtext 2.16.0
 */
package org.xtext.example.sml.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.sml.ide.contentassist.antlr.internal.InternalSmlParser;
import org.xtext.example.sml.services.SmlGrammarAccess;

public class SmlParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(SmlGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, SmlGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getMetricAccess().getAlternatives(), "rule__Metric__Alternatives");
			builder.put(grammarAccess.getIndicatorAccess().getOcAlternatives_1_0(), "rule__Indicator__OcAlternatives_1_0");
			builder.put(grammarAccess.getScopeAccess().getSpAlternatives_0(), "rule__Scope__SpAlternatives_0");
			builder.put(grammarAccess.getOccurenceAccess().getAlternatives(), "rule__Occurence__Alternatives");
			builder.put(grammarAccess.getConditionAccess().getAlternatives(), "rule__Condition__Alternatives");
			builder.put(grammarAccess.getTimeAccess().getAlternatives(), "rule__Time__Alternatives");
			builder.put(grammarAccess.getRobotAccess().getAlternatives(), "rule__Robot__Alternatives");
			builder.put(grammarAccess.getDistributionAccess().getAlternatives(), "rule__Distribution__Alternatives");
			builder.put(grammarAccess.getEnvironmentElementsAccess().getAlternatives(), "rule__EnvironmentElements__Alternatives");
			builder.put(grammarAccess.getEnvironmentElementAccess().getAlternatives(), "rule__EnvironmentElement__Alternatives");
			builder.put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
			builder.put(grammarAccess.getPositionAccess().getAlternatives(), "rule__Position__Alternatives");
			builder.put(grammarAccess.getShapeAccess().getAlternatives(), "rule__Shape__Alternatives");
			builder.put(grammarAccess.getColorAccess().getAlternatives(), "rule__Color__Alternatives");
			builder.put(grammarAccess.getDimensionAccess().getAlternatives(), "rule__Dimension__Alternatives");
			builder.put(grammarAccess.getRangeAccess().getAlternatives(), "rule__Range__Alternatives");
			builder.put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
			builder.put(grammarAccess.getBoolLiteralAccess().getValueAlternatives_0(), "rule__BoolLiteral__ValueAlternatives_0");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup(), "rule__Environment__Group__0");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup_0(), "rule__Environment__Group_0__0");
			builder.put(grammarAccess.getProbabilisticDecriptionAccess().getGroup(), "rule__ProbabilisticDecription__Group__0");
			builder.put(grammarAccess.getSwarmconfAccess().getGroup(), "rule__Swarmconf__Group__0");
			builder.put(grammarAccess.getMissionTimeAccess().getGroup(), "rule__MissionTime__Group__0");
			builder.put(grammarAccess.getMissionAccess().getGroup(), "rule__Mission__Group__0");
			builder.put(grammarAccess.getTaskAccess().getGroup(), "rule__Task__Group__0");
			builder.put(grammarAccess.getMissionObjectiveAccess().getGroup(), "rule__MissionObjective__Group__0");
			builder.put(grammarAccess.getIndicatorAccess().getGroup(), "rule__Indicator__Group__0");
			builder.put(grammarAccess.getAtomicIndicatorAccess().getGroup(), "rule__AtomicIndicator__Group__0");
			builder.put(grammarAccess.getCompoundIndicatorAccess().getGroup(), "rule__CompoundIndicator__Group__0");
			builder.put(grammarAccess.getPenaltyAccess().getGroup(), "rule__Penalty__Group__0");
			builder.put(grammarAccess.getRewardAccess().getGroup(), "rule__Reward__Group__0");
			builder.put(grammarAccess.getConditionAccess().getGroup_0(), "rule__Condition__Group_0__0");
			builder.put(grammarAccess.getConditionAccess().getGroup_1(), "rule__Condition__Group_1__0");
			builder.put(grammarAccess.getTimeAccess().getGroup_1(), "rule__Time__Group_1__0");
			builder.put(grammarAccess.getTimeAccess().getGroup_2(), "rule__Time__Group_2__0");
			builder.put(grammarAccess.getElementDescriptionAccess().getGroup(), "rule__ElementDescription__Group__0");
			builder.put(grammarAccess.getElementAccess().getGroup_2(), "rule__Element__Group_2__0");
			builder.put(grammarAccess.getObjectAccess().getGroup(), "rule__Object__Group__0");
			builder.put(grammarAccess.getObstacleAccess().getGroup(), "rule__Obstacle__Group__0");
			builder.put(grammarAccess.getLightAccess().getGroup(), "rule__Light__Group__0");
			builder.put(grammarAccess.getPositionAccess().getGroup_0(), "rule__Position__Group_0__0");
			builder.put(grammarAccess.getPositionAccess().getGroup_1(), "rule__Position__Group_1__0");
			builder.put(grammarAccess.getPositionAccess().getGroup_2(), "rule__Position__Group_2__0");
			builder.put(grammarAccess.getArenaAccess().getGroup(), "rule__Arena__Group__0");
			builder.put(grammarAccess.getRegionAccess().getGroup(), "rule__Region__Group__0");
			builder.put(grammarAccess.getRegionAccess().getGroup_3(), "rule__Region__Group_3__0");
			builder.put(grammarAccess.getRegionAccess().getGroup_4(), "rule__Region__Group_4__0");
			builder.put(grammarAccess.getCircleDAccess().getGroup(), "rule__CircleD__Group__0");
			builder.put(grammarAccess.getRectangleDAccess().getGroup(), "rule__RectangleD__Group__0");
			builder.put(grammarAccess.getCoordinateAccess().getGroup(), "rule__Coordinate__Group__0");
			builder.put(grammarAccess.getDoubleAccess().getGroup(), "rule__Double__Group__0");
			builder.put(grammarAccess.getLowerboundAccess().getGroup(), "rule__Lowerbound__Group__0");
			builder.put(grammarAccess.getLowerorEqualboundAccess().getGroup(), "rule__LowerorEqualbound__Group__0");
			builder.put(grammarAccess.getUpperboundAccess().getGroup(), "rule__Upperbound__Group__0");
			builder.put(grammarAccess.getUpperorEqualboundAccess().getGroup(), "rule__UpperorEqualbound__Group__0");
			builder.put(grammarAccess.getIntervalAccess().getGroup(), "rule__Interval__Group__0");
			builder.put(grammarAccess.getModelAccess().getArenasAssignment_0(), "rule__Model__ArenasAssignment_0");
			builder.put(grammarAccess.getModelAccess().getEnvAssignment_1(), "rule__Model__EnvAssignment_1");
			builder.put(grammarAccess.getModelAccess().getSwAssignment_2(), "rule__Model__SwAssignment_2");
			builder.put(grammarAccess.getModelAccess().getObAssignment_3(), "rule__Model__ObAssignment_3");
			builder.put(grammarAccess.getEnvironmentAccess().getEnvironmentAssignment_1(), "rule__Environment__EnvironmentAssignment_1");
			builder.put(grammarAccess.getProbabilisticDecriptionAccess().getDisAssignment_3(), "rule__ProbabilisticDecription__DisAssignment_3");
			builder.put(grammarAccess.getProbabilisticDecriptionAccess().getKAssignment_7(), "rule__ProbabilisticDecription__KAssignment_7");
			builder.put(grammarAccess.getSwarmconfAccess().getXAssignment_5(), "rule__Swarmconf__XAssignment_5");
			builder.put(grammarAccess.getSwarmconfAccess().getRAssignment_6(), "rule__Swarmconf__RAssignment_6");
			builder.put(grammarAccess.getSwarmconfAccess().getPrAssignment_7(), "rule__Swarmconf__PrAssignment_7");
			builder.put(grammarAccess.getMissionTimeAccess().getTAssignment_7(), "rule__MissionTime__TAssignment_7");
			builder.put(grammarAccess.getMissionAccess().getTAssignment_7(), "rule__Mission__TAssignment_7");
			builder.put(grammarAccess.getMissionAccess().getMAssignment_8(), "rule__Mission__MAssignment_8");
			builder.put(grammarAccess.getTaskAccess().getRAssignment_2(), "rule__Task__RAssignment_2");
			builder.put(grammarAccess.getMissionObjectiveAccess().getInAssignment_17(), "rule__MissionObjective__InAssignment_17");
			builder.put(grammarAccess.getIndicatorAccess().getSpAssignment_0(), "rule__Indicator__SpAssignment_0");
			builder.put(grammarAccess.getIndicatorAccess().getOcAssignment_1(), "rule__Indicator__OcAssignment_1");
			builder.put(grammarAccess.getAtomicIndicatorAccess().getOcAssignment_2(), "rule__AtomicIndicator__OcAssignment_2");
			builder.put(grammarAccess.getCompoundIndicatorAccess().getOcAssignment_2(), "rule__CompoundIndicator__OcAssignment_2");
			builder.put(grammarAccess.getScopeAccess().getSpAssignment(), "rule__Scope__SpAssignment");
			builder.put(grammarAccess.getPenaltyAccess().getKAssignment_3(), "rule__Penalty__KAssignment_3");
			builder.put(grammarAccess.getPenaltyAccess().getCAssignment_4(), "rule__Penalty__CAssignment_4");
			builder.put(grammarAccess.getRewardAccess().getKAssignment_3(), "rule__Reward__KAssignment_3");
			builder.put(grammarAccess.getRewardAccess().getCAssignment_4(), "rule__Reward__CAssignment_4");
			builder.put(grammarAccess.getConditionAccess().getRAssignment_0_5(), "rule__Condition__RAssignment_0_5");
			builder.put(grammarAccess.getConditionAccess().getNAssignment_1_5(), "rule__Condition__NAssignment_1_5");
			builder.put(grammarAccess.getConditionAccess().getRAssignment_1_9(), "rule__Condition__RAssignment_1_9");
			builder.put(grammarAccess.getTimeAccess().getXAssignment_0(), "rule__Time__XAssignment_0");
			builder.put(grammarAccess.getElementDescriptionAccess().getElAssignment_0(), "rule__ElementDescription__ElAssignment_0");
			builder.put(grammarAccess.getElementDescriptionAccess().getXAssignment_2(), "rule__ElementDescription__XAssignment_2");
			builder.put(grammarAccess.getElementDescriptionAccess().getObjAssignment_3(), "rule__ElementDescription__ObjAssignment_3");
			builder.put(grammarAccess.getElementDescriptionAccess().getRAssignment_4(), "rule__ElementDescription__RAssignment_4");
			builder.put(grammarAccess.getObjectAccess().getObjAssignment_0(), "rule__Object__ObjAssignment_0");
			builder.put(grammarAccess.getObjectAccess().getRAssignment_4(), "rule__Object__RAssignment_4");
			builder.put(grammarAccess.getObstacleAccess().getObsAssignment_0(), "rule__Obstacle__ObsAssignment_0");
			builder.put(grammarAccess.getObstacleAccess().getRAssignment_4(), "rule__Obstacle__RAssignment_4");
			builder.put(grammarAccess.getLightAccess().getLAssignment_0(), "rule__Light__LAssignment_0");
			builder.put(grammarAccess.getLightAccess().getCAssignment_5(), "rule__Light__CAssignment_5");
			builder.put(grammarAccess.getLightAccess().getPAssignment_11(), "rule__Light__PAssignment_11");
			builder.put(grammarAccess.getPositionAccess().getPointAssignment_0_2(), "rule__Position__PointAssignment_0_2");
			builder.put(grammarAccess.getPositionAccess().getPointAssignment_1_2(), "rule__Position__PointAssignment_1_2");
			builder.put(grammarAccess.getPositionAccess().getPointAssignment_2_2(), "rule__Position__PointAssignment_2_2");
			builder.put(grammarAccess.getArenaAccess().getSAssignment_4(), "rule__Arena__SAssignment_4");
			builder.put(grammarAccess.getRegionAccess().getColorsAssignment_0(), "rule__Region__ColorsAssignment_0");
			builder.put(grammarAccess.getRegionAccess().getShapeAssignment_1(), "rule__Region__ShapeAssignment_1");
			builder.put(grammarAccess.getRegionAccess().getNameAssignment_2(), "rule__Region__NameAssignment_2");
			builder.put(grammarAccess.getRegionAccess().getReferencepointAssignment_3_1(), "rule__Region__ReferencepointAssignment_3_1");
			builder.put(grammarAccess.getRegionAccess().getDimensionsAssignment_4_1(), "rule__Region__DimensionsAssignment_4_1");
			builder.put(grammarAccess.getCircleDAccess().getRAssignment_1(), "rule__CircleD__RAssignment_1");
			builder.put(grammarAccess.getRectangleDAccess().getLAssignment_1(), "rule__RectangleD__LAssignment_1");
			builder.put(grammarAccess.getRectangleDAccess().getWAssignment_3(), "rule__RectangleD__WAssignment_3");
			builder.put(grammarAccess.getRectangleDAccess().getHAssignment_6(), "rule__RectangleD__HAssignment_6");
			builder.put(grammarAccess.getCoordinateAccess().getXAssignment_0(), "rule__Coordinate__XAssignment_0");
			builder.put(grammarAccess.getCoordinateAccess().getYAssignment_1(), "rule__Coordinate__YAssignment_1");
			builder.put(grammarAccess.getConstantSizeAccess().getNAssignment(), "rule__ConstantSize__NAssignment");
			builder.put(grammarAccess.getLowerboundAccess().getNAssignment_2(), "rule__Lowerbound__NAssignment_2");
			builder.put(grammarAccess.getLowerorEqualboundAccess().getNAssignment_4(), "rule__LowerorEqualbound__NAssignment_4");
			builder.put(grammarAccess.getUpperboundAccess().getNAssignment_2(), "rule__Upperbound__NAssignment_2");
			builder.put(grammarAccess.getUpperorEqualboundAccess().getNAssignment_4(), "rule__UpperorEqualbound__NAssignment_4");
			builder.put(grammarAccess.getIntervalAccess().getMAssignment_1(), "rule__Interval__MAssignment_1");
			builder.put(grammarAccess.getIntervalAccess().getNAssignment_3(), "rule__Interval__NAssignment_3");
			builder.put(grammarAccess.getBoolLiteralAccess().getValueAssignment(), "rule__BoolLiteral__ValueAssignment");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private SmlGrammarAccess grammarAccess;

	@Override
	protected InternalSmlParser createParser() {
		InternalSmlParser result = new InternalSmlParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public SmlGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SmlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
