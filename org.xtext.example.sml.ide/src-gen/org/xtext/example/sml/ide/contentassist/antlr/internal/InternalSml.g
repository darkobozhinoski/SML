/*
 * generated by Xtext 2.21.0
 */
grammar InternalSml;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.sml.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.sml.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.sml.services.SmlGrammarAccess;

}
@parser::members {
	private SmlGrammarAccess grammarAccess;

	public void setGrammarAccess(SmlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwarmconf
entryRuleSwarmconf
:
{ before(grammarAccess.getSwarmconfRule()); }
	 ruleSwarmconf
{ after(grammarAccess.getSwarmconfRule()); } 
	 EOF 
;

// Rule Swarmconf
ruleSwarmconf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwarmconfAccess().getGroup()); }
		(rule__Swarmconf__Group__0)
		{ after(grammarAccess.getSwarmconfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMissionSpecification
entryRuleMissionSpecification
:
{ before(grammarAccess.getMissionSpecificationRule()); }
	 ruleMissionSpecification
{ after(grammarAccess.getMissionSpecificationRule()); } 
	 EOF 
;

// Rule MissionSpecification
ruleMissionSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMissionSpecificationAccess().getGroup()); }
		(rule__MissionSpecification__Group__0)
		{ after(grammarAccess.getMissionSpecificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMissionTime
entryRuleMissionTime
:
{ before(grammarAccess.getMissionTimeRule()); }
	 ruleMissionTime
{ after(grammarAccess.getMissionTimeRule()); } 
	 EOF 
;

// Rule MissionTime
ruleMissionTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMissionTimeAccess().getGroup()); }
		(rule__MissionTime__Group__0)
		{ after(grammarAccess.getMissionTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMission
entryRuleMission
:
{ before(grammarAccess.getMissionRule()); }
	 ruleMission
{ after(grammarAccess.getMissionRule()); } 
	 EOF 
;

// Rule Mission
ruleMission 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMissionAccess().getGroup()); }
		(rule__Mission__Group__0)
		{ after(grammarAccess.getMissionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTask
entryRuleTask
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskAccess().getAlternatives()); }
		(rule__Task__Alternatives)
		{ after(grammarAccess.getTaskAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAggregate
entryRuleAggregate
:
{ before(grammarAccess.getAggregateRule()); }
	 ruleAggregate
{ after(grammarAccess.getAggregateRule()); } 
	 EOF 
;

// Rule Aggregate
ruleAggregate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAggregateAccess().getGroup()); }
		(rule__Aggregate__Group__0)
		{ after(grammarAccess.getAggregateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMigration
entryRuleMigration
:
{ before(grammarAccess.getMigrationRule()); }
	 ruleMigration
{ after(grammarAccess.getMigrationRule()); } 
	 EOF 
;

// Rule Migration
ruleMigration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMigrationAccess().getGroup()); }
		(rule__Migration__Group__0)
		{ after(grammarAccess.getMigrationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForaging
entryRuleForaging
:
{ before(grammarAccess.getForagingRule()); }
	 ruleForaging
{ after(grammarAccess.getForagingRule()); } 
	 EOF 
;

// Rule Foraging
ruleForaging 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForagingAccess().getGroup()); }
		(rule__Foraging__Group__0)
		{ after(grammarAccess.getForagingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetric
entryRuleMetric
:
{ before(grammarAccess.getMetricRule()); }
	 ruleMetric
{ after(grammarAccess.getMetricRule()); } 
	 EOF 
;

// Rule Metric
ruleMetric 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetricAccess().getAlternatives()); }
		(rule__Metric__Alternatives)
		{ after(grammarAccess.getMetricAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvironment
entryRuleEnvironment
:
{ before(grammarAccess.getEnvironmentRule()); }
	 ruleEnvironment
{ after(grammarAccess.getEnvironmentRule()); } 
	 EOF 
;

// Rule Environment
ruleEnvironment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvironmentAccess().getGroup()); }
		(rule__Environment__Group__0)
		{ after(grammarAccess.getEnvironmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProbabilisticDecription
entryRuleProbabilisticDecription
:
{ before(grammarAccess.getProbabilisticDecriptionRule()); }
	 ruleProbabilisticDecription
{ after(grammarAccess.getProbabilisticDecriptionRule()); } 
	 EOF 
;

// Rule ProbabilisticDecription
ruleProbabilisticDecription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProbabilisticDecriptionAccess().getGroup()); }
		(rule__ProbabilisticDecription__Group__0)
		{ after(grammarAccess.getProbabilisticDecriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMissionObjective
entryRuleMissionObjective
:
{ before(grammarAccess.getMissionObjectiveRule()); }
	 ruleMissionObjective
{ after(grammarAccess.getMissionObjectiveRule()); } 
	 EOF 
;

// Rule MissionObjective
ruleMissionObjective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMissionObjectiveAccess().getGroup()); }
		(rule__MissionObjective__Group__0)
		{ after(grammarAccess.getMissionObjectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndicator
entryRuleIndicator
:
{ before(grammarAccess.getIndicatorRule()); }
	 ruleIndicator
{ after(grammarAccess.getIndicatorRule()); } 
	 EOF 
;

// Rule Indicator
ruleIndicator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndicatorAccess().getGroup()); }
		(rule__Indicator__Group__0)
		{ after(grammarAccess.getIndicatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicIndicator
entryRuleAtomicIndicator
:
{ before(grammarAccess.getAtomicIndicatorRule()); }
	 ruleAtomicIndicator
{ after(grammarAccess.getAtomicIndicatorRule()); } 
	 EOF 
;

// Rule AtomicIndicator
ruleAtomicIndicator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicIndicatorAccess().getGroup()); }
		(rule__AtomicIndicator__Group__0)
		{ after(grammarAccess.getAtomicIndicatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompoundIndicator
entryRuleCompoundIndicator
:
{ before(grammarAccess.getCompoundIndicatorRule()); }
	 ruleCompoundIndicator
{ after(grammarAccess.getCompoundIndicatorRule()); } 
	 EOF 
;

// Rule CompoundIndicator
ruleCompoundIndicator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompoundIndicatorAccess().getGroup()); }
		(rule__CompoundIndicator__Group__0)
		{ after(grammarAccess.getCompoundIndicatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScope
entryRuleScope
:
{ before(grammarAccess.getScopeRule()); }
	 ruleScope
{ after(grammarAccess.getScopeRule()); } 
	 EOF 
;

// Rule Scope
ruleScope 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScopeAccess().getAlternatives()); }
		(rule__Scope__Alternatives)
		{ after(grammarAccess.getScopeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOccurence
entryRuleOccurence
:
{ before(grammarAccess.getOccurenceRule()); }
	 ruleOccurence
{ after(grammarAccess.getOccurenceRule()); } 
	 EOF 
;

// Rule Occurence
ruleOccurence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOccurenceAccess().getAlternatives()); }
		(rule__Occurence__Alternatives)
		{ after(grammarAccess.getOccurenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePenalty
entryRulePenalty
:
{ before(grammarAccess.getPenaltyRule()); }
	 rulePenalty
{ after(grammarAccess.getPenaltyRule()); } 
	 EOF 
;

// Rule Penalty
rulePenalty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPenaltyAccess().getGroup()); }
		(rule__Penalty__Group__0)
		{ after(grammarAccess.getPenaltyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReward
entryRuleReward
:
{ before(grammarAccess.getRewardRule()); }
	 ruleReward
{ after(grammarAccess.getRewardRule()); } 
	 EOF 
;

// Rule Reward
ruleReward 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRewardAccess().getGroup()); }
		(rule__Reward__Group__0)
		{ after(grammarAccess.getRewardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getAlternatives()); }
		(rule__Condition__Alternatives)
		{ after(grammarAccess.getConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRobot
entryRuleRobot
:
{ before(grammarAccess.getRobotRule()); }
	 ruleRobot
{ after(grammarAccess.getRobotRule()); } 
	 EOF 
;

// Rule Robot
ruleRobot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotAccess().getAlternatives()); }
		(rule__Robot__Alternatives)
		{ after(grammarAccess.getRobotAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDistribution
entryRuleDistribution
:
{ before(grammarAccess.getDistributionRule()); }
	 ruleDistribution
{ after(grammarAccess.getDistributionRule()); } 
	 EOF 
;

// Rule Distribution
ruleDistribution 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDistributionAccess().getAlternatives()); }
		(rule__Distribution__Alternatives)
		{ after(grammarAccess.getDistributionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvironmentElements
entryRuleEnvironmentElements
:
{ before(grammarAccess.getEnvironmentElementsRule()); }
	 ruleEnvironmentElements
{ after(grammarAccess.getEnvironmentElementsRule()); } 
	 EOF 
;

// Rule EnvironmentElements
ruleEnvironmentElements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvironmentElementsAccess().getAlternatives()); }
		(rule__EnvironmentElements__Alternatives)
		{ after(grammarAccess.getEnvironmentElementsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvironmentElement
entryRuleEnvironmentElement
:
{ before(grammarAccess.getEnvironmentElementRule()); }
	 ruleEnvironmentElement
{ after(grammarAccess.getEnvironmentElementRule()); } 
	 EOF 
;

// Rule EnvironmentElement
ruleEnvironmentElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvironmentElementAccess().getAlternatives()); }
		(rule__EnvironmentElement__Alternatives)
		{ after(grammarAccess.getEnvironmentElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementDescription
entryRuleElementDescription
:
{ before(grammarAccess.getElementDescriptionRule()); }
	 ruleElementDescription
{ after(grammarAccess.getElementDescriptionRule()); } 
	 EOF 
;

// Rule ElementDescription
ruleElementDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementDescriptionAccess().getGroup()); }
		(rule__ElementDescription__Group__0)
		{ after(grammarAccess.getElementDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getGroup()); }
		(rule__Element__Group__0)
		{ after(grammarAccess.getElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEl
entryRuleEl
:
{ before(grammarAccess.getElRule()); }
	 ruleEl
{ after(grammarAccess.getElRule()); } 
	 EOF 
;

// Rule El
ruleEl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElAccess().getAlternatives()); }
		(rule__El__Alternatives)
		{ after(grammarAccess.getElAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObject
entryRuleObject
:
{ before(grammarAccess.getObjectRule()); }
	 ruleObject
{ after(grammarAccess.getObjectRule()); } 
	 EOF 
;

// Rule Object
ruleObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectAccess().getGroup()); }
		(rule__Object__Group__0)
		{ after(grammarAccess.getObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObstacle
entryRuleObstacle
:
{ before(grammarAccess.getObstacleRule()); }
	 ruleObstacle
{ after(grammarAccess.getObstacleRule()); } 
	 EOF 
;

// Rule Obstacle
ruleObstacle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObstacleAccess().getGroup()); }
		(rule__Obstacle__Group__0)
		{ after(grammarAccess.getObstacleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePatch
entryRulePatch
:
{ before(grammarAccess.getPatchRule()); }
	 rulePatch
{ after(grammarAccess.getPatchRule()); } 
	 EOF 
;

// Rule Patch
rulePatch 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatchAccess().getGroup()); }
		(rule__Patch__Group__0)
		{ after(grammarAccess.getPatchAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLight
entryRuleLight
:
{ before(grammarAccess.getLightRule()); }
	 ruleLight
{ after(grammarAccess.getLightRule()); } 
	 EOF 
;

// Rule Light
ruleLight 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLightAccess().getGroup()); }
		(rule__Light__Group__0)
		{ after(grammarAccess.getLightAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePosition
entryRulePosition
:
{ before(grammarAccess.getPositionRule()); }
	 rulePosition
{ after(grammarAccess.getPositionRule()); } 
	 EOF 
;

// Rule Position
rulePosition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPositionAccess().getGroup()); }
		(rule__Position__Group__0)
		{ after(grammarAccess.getPositionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShape2D
entryRuleShape2D
:
{ before(grammarAccess.getShape2DRule()); }
	 ruleShape2D
{ after(grammarAccess.getShape2DRule()); } 
	 EOF 
;

// Rule Shape2D
ruleShape2D 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShape2DAccess().getAlternatives()); }
		(rule__Shape2D__Alternatives)
		{ after(grammarAccess.getShape2DAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArena
entryRuleArena
:
{ before(grammarAccess.getArenaRule()); }
	 ruleArena
{ after(grammarAccess.getArenaRule()); } 
	 EOF 
;

// Rule Arena
ruleArena 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArenaAccess().getGroup()); }
		(rule__Arena__Group__0)
		{ after(grammarAccess.getArenaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColor
entryRuleColor
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorAccess().getAlternatives()); }
		(rule__Color__Alternatives)
		{ after(grammarAccess.getColorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegion
entryRuleRegion
:
{ before(grammarAccess.getRegionRule()); }
	 ruleRegion
{ after(grammarAccess.getRegionRule()); } 
	 EOF 
;

// Rule Region
ruleRegion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegionAccess().getGroup()); }
		(rule__Region__Group__0)
		{ after(grammarAccess.getRegionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegionDefinition
entryRuleRegionDefinition
:
{ before(grammarAccess.getRegionDefinitionRule()); }
	 ruleRegionDefinition
{ after(grammarAccess.getRegionDefinitionRule()); } 
	 EOF 
;

// Rule RegionDefinition
ruleRegionDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegionDefinitionAccess().getAlternatives()); }
		(rule__RegionDefinition__Alternatives)
		{ after(grammarAccess.getRegionDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition1
entryRuleDefinition1
:
{ before(grammarAccess.getDefinition1Rule()); }
	 ruleDefinition1
{ after(grammarAccess.getDefinition1Rule()); } 
	 EOF 
;

// Rule Definition1
ruleDefinition1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinition1Access().getGroup()); }
		(rule__Definition1__Group__0)
		{ after(grammarAccess.getDefinition1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition2
entryRuleDefinition2
:
{ before(grammarAccess.getDefinition2Rule()); }
	 ruleDefinition2
{ after(grammarAccess.getDefinition2Rule()); } 
	 EOF 
;

// Rule Definition2
ruleDefinition2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinition2Access().getGroup()); }
		(rule__Definition2__Group__0)
		{ after(grammarAccess.getDefinition2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition3
entryRuleDefinition3
:
{ before(grammarAccess.getDefinition3Rule()); }
	 ruleDefinition3
{ after(grammarAccess.getDefinition3Rule()); } 
	 EOF 
;

// Rule Definition3
ruleDefinition3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinition3Access().getGroup()); }
		(rule__Definition3__Group__0)
		{ after(grammarAccess.getDefinition3Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAxis
entryRuleAxis
:
{ before(grammarAccess.getAxisRule()); }
	 ruleAxis
{ after(grammarAccess.getAxisRule()); } 
	 EOF 
;

// Rule Axis
ruleAxis 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAxisAccess().getAlternatives()); }
		(rule__Axis__Alternatives)
		{ after(grammarAccess.getAxisAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDimension
entryRuleDimension
:
{ before(grammarAccess.getDimensionRule()); }
	 ruleDimension
{ after(grammarAccess.getDimensionRule()); } 
	 EOF 
;

// Rule Dimension
ruleDimension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDimensionAccess().getAlternatives()); }
		(rule__Dimension__Alternatives)
		{ after(grammarAccess.getDimensionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDimension1
entryRuleDimension1
:
{ before(grammarAccess.getDimension1Rule()); }
	 ruleDimension1
{ after(grammarAccess.getDimension1Rule()); } 
	 EOF 
;

// Rule Dimension1
ruleDimension1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDimension1Access().getGroup()); }
		(rule__Dimension1__Group__0)
		{ after(grammarAccess.getDimension1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDimension2
entryRuleDimension2
:
{ before(grammarAccess.getDimension2Rule()); }
	 ruleDimension2
{ after(grammarAccess.getDimension2Rule()); } 
	 EOF 
;

// Rule Dimension2
ruleDimension2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDimension2Access().getGroup()); }
		(rule__Dimension2__Group__0)
		{ after(grammarAccess.getDimension2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDimension3
entryRuleDimension3
:
{ before(grammarAccess.getDimension3Rule()); }
	 ruleDimension3
{ after(grammarAccess.getDimension3Rule()); } 
	 EOF 
;

// Rule Dimension3
ruleDimension3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDimension3Access().getGroup()); }
		(rule__Dimension3__Group__0)
		{ after(grammarAccess.getDimension3Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCoordinate2D
entryRuleCoordinate2D
:
{ before(grammarAccess.getCoordinate2DRule()); }
	 ruleCoordinate2D
{ after(grammarAccess.getCoordinate2DRule()); } 
	 EOF 
;

// Rule Coordinate2D
ruleCoordinate2D 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCoordinate2DAccess().getGroup()); }
		(rule__Coordinate2D__Group__0)
		{ after(grammarAccess.getCoordinate2DAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCoordinate3D
entryRuleCoordinate3D
:
{ before(grammarAccess.getCoordinate3DRule()); }
	 ruleCoordinate3D
{ after(grammarAccess.getCoordinate3DRule()); } 
	 EOF 
;

// Rule Coordinate3D
ruleCoordinate3D 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCoordinate3DAccess().getGroup()); }
		(rule__Coordinate3D__Group__0)
		{ after(grammarAccess.getCoordinate3DAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDouble
entryRuleDouble
:
{ before(grammarAccess.getDoubleRule()); }
	 ruleDouble
{ after(grammarAccess.getDoubleRule()); } 
	 EOF 
;

// Rule Double
ruleDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoubleAccess().getGroup()); }
		(rule__Double__Group__0)
		{ after(grammarAccess.getDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRange
entryRuleRange
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeAccess().getAlternatives()); }
		(rule__Range__Alternatives)
		{ after(grammarAccess.getRangeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantSize
entryRuleConstantSize
:
{ before(grammarAccess.getConstantSizeRule()); }
	 ruleConstantSize
{ after(grammarAccess.getConstantSizeRule()); } 
	 EOF 
;

// Rule ConstantSize
ruleConstantSize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantSizeAccess().getNAssignment()); }
		(rule__ConstantSize__NAssignment)
		{ after(grammarAccess.getConstantSizeAccess().getNAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLowerbound
entryRuleLowerbound
:
{ before(grammarAccess.getLowerboundRule()); }
	 ruleLowerbound
{ after(grammarAccess.getLowerboundRule()); } 
	 EOF 
;

// Rule Lowerbound
ruleLowerbound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLowerboundAccess().getGroup()); }
		(rule__Lowerbound__Group__0)
		{ after(grammarAccess.getLowerboundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLowerorEqualbound
entryRuleLowerorEqualbound
:
{ before(grammarAccess.getLowerorEqualboundRule()); }
	 ruleLowerorEqualbound
{ after(grammarAccess.getLowerorEqualboundRule()); } 
	 EOF 
;

// Rule LowerorEqualbound
ruleLowerorEqualbound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLowerorEqualboundAccess().getGroup()); }
		(rule__LowerorEqualbound__Group__0)
		{ after(grammarAccess.getLowerorEqualboundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpperbound
entryRuleUpperbound
:
{ before(grammarAccess.getUpperboundRule()); }
	 ruleUpperbound
{ after(grammarAccess.getUpperboundRule()); } 
	 EOF 
;

// Rule Upperbound
ruleUpperbound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpperboundAccess().getGroup()); }
		(rule__Upperbound__Group__0)
		{ after(grammarAccess.getUpperboundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpperorEqualbound
entryRuleUpperorEqualbound
:
{ before(grammarAccess.getUpperorEqualboundRule()); }
	 ruleUpperorEqualbound
{ after(grammarAccess.getUpperorEqualboundRule()); } 
	 EOF 
;

// Rule UpperorEqualbound
ruleUpperorEqualbound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpperorEqualboundAccess().getGroup()); }
		(rule__UpperorEqualbound__Group__0)
		{ after(grammarAccess.getUpperorEqualboundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterval
entryRuleInterval
:
{ before(grammarAccess.getIntervalRule()); }
	 ruleInterval
{ after(grammarAccess.getIntervalRule()); } 
	 EOF 
;

// Rule Interval
ruleInterval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntervalAccess().getAlternatives()); }
		(rule__Interval__Alternatives)
		{ after(grammarAccess.getIntervalAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getAggregateParserRuleCall_0()); }
		ruleAggregate
		{ after(grammarAccess.getTaskAccess().getAggregateParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTaskAccess().getMigrationParserRuleCall_1()); }
		ruleMigration
		{ after(grammarAccess.getTaskAccess().getMigrationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTaskAccess().getForagingParserRuleCall_2()); }
		ruleForaging
		{ after(grammarAccess.getTaskAccess().getForagingParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metric__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetricAccess().getSecondsKeyword_0()); }
		'seconds'
		{ after(grammarAccess.getMetricAccess().getSecondsKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMetricAccess().getStepsKeyword_1()); }
		'steps'
		{ after(grammarAccess.getMetricAccess().getStepsKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getMetricAccess().getMKeyword_2()); }
		'm'
		{ after(grammarAccess.getMetricAccess().getMKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getMetricAccess().getKgKeyword_3()); }
		'kg'
		{ after(grammarAccess.getMetricAccess().getKgKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__TypeAlternatives_13_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionObjectiveAccess().getTypeMaximizedKeyword_13_0_0()); }
		'maximized.'
		{ after(grammarAccess.getMissionObjectiveAccess().getTypeMaximizedKeyword_13_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMissionObjectiveAccess().getTypeMinimizedKeyword_13_0_1()); }
		'minimized.'
		{ after(grammarAccess.getMissionObjectiveAccess().getTypeMinimizedKeyword_13_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indicator__OcAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndicatorAccess().getOcAtomicIndicatorParserRuleCall_1_0_0()); }
		ruleAtomicIndicator
		{ after(grammarAccess.getIndicatorAccess().getOcAtomicIndicatorParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIndicatorAccess().getOcCompoundIndicatorParserRuleCall_1_0_1()); }
		ruleCompoundIndicator
		{ after(grammarAccess.getIndicatorAccess().getOcCompoundIndicatorParserRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getSpAssignment_0()); }
		(rule__Scope__SpAssignment_0)
		{ after(grammarAccess.getScopeAccess().getSpAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getScopeAccess().getConditionParserRuleCall_1()); }
		ruleCondition
		{ after(grammarAccess.getScopeAccess().getConditionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__SpAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getSpAtAnyPointInTimeKeyword_0_0_0()); }
		'At any point in time,'
		{ after(grammarAccess.getScopeAccess().getSpAtAnyPointInTimeKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getScopeAccess().getSpAtTheEndOfTheMissionKeyword_0_0_1()); }
		'At the end of the mission,'
		{ after(grammarAccess.getScopeAccess().getSpAtTheEndOfTheMissionKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Occurence__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOccurenceAccess().getRewardParserRuleCall_0()); }
		ruleReward
		{ after(grammarAccess.getOccurenceAccess().getRewardParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOccurenceAccess().getPenaltyParserRuleCall_1()); }
		rulePenalty
		{ after(grammarAccess.getOccurenceAccess().getPenaltyParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getGroup_0()); }
		(rule__Condition__Group_0__0)
		{ after(grammarAccess.getConditionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getGroup_1()); }
		(rule__Condition__Group_1__0)
		{ after(grammarAccess.getConditionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getGroup_2()); }
		(rule__Condition__Group_2__0)
		{ after(grammarAccess.getConditionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getIfKeyword_0_0_0()); }
		'if'
		{ after(grammarAccess.getConditionAccess().getIfKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getIfKeyword_0_0_1()); }
		'If'
		{ after(grammarAccess.getConditionAccess().getIfKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getOnKeyword_0_3_0()); }
		'on'
		{ after(grammarAccess.getConditionAccess().getOnKeyword_0_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getOutsideKeyword_0_3_1()); }
		'outside'
		{ after(grammarAccess.getConditionAccess().getOutsideKeyword_0_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getIfKeyword_1_0_0()); }
		'if'
		{ after(grammarAccess.getConditionAccess().getIfKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getIfKeyword_1_0_1()); }
		'If'
		{ after(grammarAccess.getConditionAccess().getIfKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives_1_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getOnKeyword_1_7_0()); }
		'on'
		{ after(grammarAccess.getConditionAccess().getOnKeyword_1_7_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getOutsideKeyword_1_7_1()); }
		'outside'
		{ after(grammarAccess.getConditionAccess().getOutsideKeyword_1_7_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getIfKeyword_2_0_0()); }
		'if'
		{ after(grammarAccess.getConditionAccess().getIfKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getIfKeyword_2_0_1()); }
		'If'
		{ after(grammarAccess.getConditionAccess().getIfKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getEPuckKeyword_0()); }
		'e-puck'
		{ after(grammarAccess.getRobotAccess().getEPuckKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getRobotAccess().getFootBootKeyword_1()); }
		'foot-boot'
		{ after(grammarAccess.getRobotAccess().getFootBootKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distribution__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDistributionAccess().getUniformKeyword_0()); }
		'Uniform'
		{ after(grammarAccess.getDistributionAccess().getUniformKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getDistributionAccess().getGaussianKeyword_1()); }
		'Gaussian'
		{ after(grammarAccess.getDistributionAccess().getGaussianKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getDistributionAccess().getConstantKeyword_2()); }
		'Constant'
		{ after(grammarAccess.getDistributionAccess().getConstantKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentElements__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentElementsAccess().getEnvironmentElementParserRuleCall_0()); }
		ruleEnvironmentElement
		{ after(grammarAccess.getEnvironmentElementsAccess().getEnvironmentElementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnvironmentElementsAccess().getElementDescriptionParserRuleCall_1()); }
		ruleElementDescription
		{ after(grammarAccess.getEnvironmentElementsAccess().getElementDescriptionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentElementAccess().getObstacleParserRuleCall_0()); }
		ruleObstacle
		{ after(grammarAccess.getEnvironmentElementAccess().getObstacleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnvironmentElementAccess().getLightParserRuleCall_1()); }
		ruleLight
		{ after(grammarAccess.getEnvironmentElementAccess().getLightParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getEnvironmentElementAccess().getObjectParserRuleCall_2()); }
		ruleObject
		{ after(grammarAccess.getEnvironmentElementAccess().getObjectParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getEnvironmentElementAccess().getPatchParserRuleCall_3()); }
		rulePatch
		{ after(grammarAccess.getEnvironmentElementAccess().getPatchParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getEnvironmentElementAccess().getGroup_4()); }
		(rule__EnvironmentElement__Group_4__0)
		{ after(grammarAccess.getEnvironmentElementAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__El__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElAccess().getObjectsKeyword_0()); }
		'objects'
		{ after(grammarAccess.getElAccess().getObjectsKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getElAccess().getObstaclesKeyword_1()); }
		'obstacles'
		{ after(grammarAccess.getElAccess().getObstaclesKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getElAccess().getGroup_2()); }
		(rule__El__Group_2__0)
		{ after(grammarAccess.getElAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getElAccess().getPatchKeyword_3()); }
		'patch'
		{ after(grammarAccess.getElAccess().getPatchKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionAccess().getGroup_0_0()); }
		(rule__Position__Group_0_0__0)
		{ after(grammarAccess.getPositionAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPositionAccess().getReferenceKeyword_0_1()); }
		'reference'
		{ after(grammarAccess.getPositionAccess().getReferenceKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__PointAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionAccess().getPointCoordinate2DParserRuleCall_2_0_0()); }
		ruleCoordinate2D
		{ after(grammarAccess.getPositionAccess().getPointCoordinate2DParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPositionAccess().getPointCoordinate3DParserRuleCall_2_0_1()); }
		ruleCoordinate3D
		{ after(grammarAccess.getPositionAccess().getPointCoordinate3DParserRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shape2D__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShape2DAccess().getCircleKeyword_0()); }
		'Circle'
		{ after(grammarAccess.getShape2DAccess().getCircleKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getShape2DAccess().getPolygonKeyword_1()); }
		'Polygon'
		{ after(grammarAccess.getShape2DAccess().getPolygonKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getShape2DAccess().getTriangleKeyword_2()); }
		'Triangle'
		{ after(grammarAccess.getShape2DAccess().getTriangleKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getShape2DAccess().getRectangleKeyword_3()); }
		'Rectangle'
		{ after(grammarAccess.getShape2DAccess().getRectangleKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getShape2DAccess().getDodecagonKeyword_4()); }
		'Dodecagon'
		{ after(grammarAccess.getShape2DAccess().getDodecagonKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getShape2DAccess().getHexagonKeyword_5()); }
		'Hexagon'
		{ after(grammarAccess.getShape2DAccess().getHexagonKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getShape2DAccess().getSquareKeyword_6()); }
		'Square'
		{ after(grammarAccess.getShape2DAccess().getSquareKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getShape2DAccess().getRegionKeyword_7()); }
		'Region'
		{ after(grammarAccess.getShape2DAccess().getRegionKeyword_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getRedKeyword_0()); }
		'red'
		{ after(grammarAccess.getColorAccess().getRedKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getYellowKeyword_1()); }
		'yellow'
		{ after(grammarAccess.getColorAccess().getYellowKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getGreenKeyword_2()); }
		'green'
		{ after(grammarAccess.getColorAccess().getGreenKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getGrayKeyword_3()); }
		'gray'
		{ after(grammarAccess.getColorAccess().getGrayKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getBlackKeyword_4()); }
		'black'
		{ after(grammarAccess.getColorAccess().getBlackKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getColorAccess().getWhiteKeyword_5()); }
		'white'
		{ after(grammarAccess.getColorAccess().getWhiteKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionDefinition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegionDefinitionAccess().getDefinition1ParserRuleCall_0()); }
		ruleDefinition1
		{ after(grammarAccess.getRegionDefinitionAccess().getDefinition1ParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegionDefinitionAccess().getDefinition2ParserRuleCall_1()); }
		ruleDefinition2
		{ after(grammarAccess.getRegionDefinitionAccess().getDefinition2ParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRegionDefinitionAccess().getDefinition3ParserRuleCall_2()); }
		ruleDefinition3
		{ after(grammarAccess.getRegionDefinitionAccess().getDefinition3ParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Axis__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAxisAccess().getXKeyword_0()); }
		'x'
		{ after(grammarAccess.getAxisAccess().getXKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAxisAccess().getYKeyword_1()); }
		'y'
		{ after(grammarAccess.getAxisAccess().getYKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimensionAccess().getDimension1ParserRuleCall_0()); }
		ruleDimension1
		{ after(grammarAccess.getDimensionAccess().getDimension1ParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDimensionAccess().getDimension2ParserRuleCall_1()); }
		ruleDimension2
		{ after(grammarAccess.getDimensionAccess().getDimension2ParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDimensionAccess().getDimension3ParserRuleCall_2()); }
		ruleDimension3
		{ after(grammarAccess.getDimensionAccess().getDimension3ParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getUpperboundParserRuleCall_0()); }
		ruleUpperbound
		{ after(grammarAccess.getRangeAccess().getUpperboundParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeAccess().getLowerboundParserRuleCall_1()); }
		ruleLowerbound
		{ after(grammarAccess.getRangeAccess().getLowerboundParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRangeAccess().getIntervalParserRuleCall_2()); }
		ruleInterval
		{ after(grammarAccess.getRangeAccess().getIntervalParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRangeAccess().getLowerorEqualboundParserRuleCall_3()); }
		ruleLowerorEqualbound
		{ after(grammarAccess.getRangeAccess().getLowerorEqualboundParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getRangeAccess().getUpperorEqualboundParserRuleCall_4()); }
		ruleUpperorEqualbound
		{ after(grammarAccess.getRangeAccess().getUpperorEqualboundParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getRangeAccess().getConstantSizeParserRuleCall_5()); }
		ruleConstantSize
		{ after(grammarAccess.getRangeAccess().getConstantSizeParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getGroup_0()); }
		(rule__Interval__Group_0__0)
		{ after(grammarAccess.getIntervalAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntervalAccess().getGroup_1()); }
		(rule__Interval__Group_1__0)
		{ after(grammarAccess.getIntervalAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getArenasAssignment_0()); }
	(rule__Model__ArenasAssignment_0)
	{ after(grammarAccess.getModelAccess().getArenasAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getEnvAssignment_1()); }
	(rule__Model__EnvAssignment_1)
	{ after(grammarAccess.getModelAccess().getEnvAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSwAssignment_2()); }
	(rule__Model__SwAssignment_2)*
	{ after(grammarAccess.getModelAccess().getSwAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getMsAssignment_3()); }
	(rule__Model__MsAssignment_3)*
	{ after(grammarAccess.getModelAccess().getMsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Swarmconf__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__0__Impl
	rule__Swarmconf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getTheKeyword_0()); }
	'The'
	{ after(grammarAccess.getSwarmconfAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__1__Impl
	rule__Swarmconf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getRobotKeyword_1()); }
	'robot'
	{ after(grammarAccess.getSwarmconfAccess().getRobotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__2__Impl
	rule__Swarmconf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getSwarmKeyword_2()); }
	'swarm'
	{ after(grammarAccess.getSwarmconfAccess().getSwarmKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__3__Impl
	rule__Swarmconf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getConsistsKeyword_3()); }
	'consists'
	{ after(grammarAccess.getSwarmconfAccess().getConsistsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__4__Impl
	rule__Swarmconf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getOfKeyword_4()); }
	'of'
	{ after(grammarAccess.getSwarmconfAccess().getOfKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__5__Impl
	rule__Swarmconf__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getXAssignment_5()); }
	(rule__Swarmconf__XAssignment_5)
	{ after(grammarAccess.getSwarmconfAccess().getXAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__6__Impl
	rule__Swarmconf__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getRAssignment_6()); }
	(rule__Swarmconf__RAssignment_6)
	{ after(grammarAccess.getSwarmconfAccess().getRAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Swarmconf__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwarmconfAccess().getPrAssignment_7()); }
	(rule__Swarmconf__PrAssignment_7)
	{ after(grammarAccess.getSwarmconfAccess().getPrAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MissionSpecification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionSpecification__Group__0__Impl
	rule__MissionSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionSpecification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionSpecificationAccess().getMAssignment_0()); }
	(rule__MissionSpecification__MAssignment_0)
	{ after(grammarAccess.getMissionSpecificationAccess().getMAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionSpecification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionSpecification__Group__1__Impl
	rule__MissionSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionSpecification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionSpecificationAccess().getMtAssignment_1()); }
	(rule__MissionSpecification__MtAssignment_1)
	{ after(grammarAccess.getMissionSpecificationAccess().getMtAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionSpecification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionSpecification__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionSpecification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionSpecificationAccess().getObAssignment_2()); }
	(rule__MissionSpecification__ObAssignment_2)
	{ after(grammarAccess.getMissionSpecificationAccess().getObAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MissionTime__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionTime__Group__0__Impl
	rule__MissionTime__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionTimeAccess().getTheKeyword_0()); }
	'The'
	{ after(grammarAccess.getMissionTimeAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionTime__Group__1__Impl
	rule__MissionTime__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionTimeAccess().getTotalKeyword_1()); }
	'total'
	{ after(grammarAccess.getMissionTimeAccess().getTotalKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionTime__Group__2__Impl
	rule__MissionTime__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionTimeAccess().getTimeKeyword_2()); }
	'time'
	{ after(grammarAccess.getMissionTimeAccess().getTimeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionTime__Group__3__Impl
	rule__MissionTime__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionTimeAccess().getOfKeyword_3()); }
	'of'
	{ after(grammarAccess.getMissionTimeAccess().getOfKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionTime__Group__4__Impl
	rule__MissionTime__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionTimeAccess().getTheKeyword_4()); }
	'the'
	{ after(grammarAccess.getMissionTimeAccess().getTheKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionTime__Group__5__Impl
	rule__MissionTime__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionTimeAccess().getMissionKeyword_5()); }
	'mission'
	{ after(grammarAccess.getMissionTimeAccess().getMissionKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionTime__Group__6__Impl
	rule__MissionTime__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionTimeAccess().getIsKeyword_6()); }
	'is'
	{ after(grammarAccess.getMissionTimeAccess().getIsKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionTime__Group__7__Impl
	rule__MissionTime__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionTimeAccess().getTAssignment_7()); }
	(rule__MissionTime__TAssignment_7)
	{ after(grammarAccess.getMissionTimeAccess().getTAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionTime__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionTimeAccess().getMAssignment_8()); }
	(rule__MissionTime__MAssignment_8)
	{ after(grammarAccess.getMissionTimeAccess().getMAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__0__Impl
	rule__Mission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getTheKeyword_0()); }
	'The'
	{ after(grammarAccess.getMissionAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__1__Impl
	rule__Mission__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getMissionKeyword_1()); }
	'mission'
	{ after(grammarAccess.getMissionAccess().getMissionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__2__Impl
	rule__Mission__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getOfKeyword_2()); }
	'of'
	{ after(grammarAccess.getMissionAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__3__Impl
	rule__Mission__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getTheKeyword_3()); }
	'the'
	{ after(grammarAccess.getMissionAccess().getTheKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__4__Impl
	rule__Mission__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getRobotsKeyword_4()); }
	'robots'
	{ after(grammarAccess.getMissionAccess().getRobotsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__5__Impl
	rule__Mission__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getIsKeyword_5()); }
	'is'
	{ after(grammarAccess.getMissionAccess().getIsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__6__Impl
	rule__Mission__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getToKeyword_6()); }
	'to'
	{ after(grammarAccess.getMissionAccess().getToKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getTAssignment_7()); }
	(rule__Mission__TAssignment_7)
	{ after(grammarAccess.getMissionAccess().getTAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group__0__Impl
	rule__Aggregate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getAggregateKeyword_0()); }
	'aggregate'
	{ after(grammarAccess.getAggregateAccess().getAggregateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group__1__Impl
	rule__Aggregate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getOnKeyword_1()); }
	'on'
	{ after(grammarAccess.getAggregateAccess().getOnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group__2__Impl
	rule__Aggregate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getRAssignment_2()); }
	(rule__Aggregate__RAssignment_2)
	{ after(grammarAccess.getAggregateAccess().getRAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getGroup_3()); }
	(rule__Aggregate__Group_3__0)*
	{ after(grammarAccess.getAggregateAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group_3__0__Impl
	rule__Aggregate__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getAggregateAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregate__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregateAccess().getRAssignment_3_1()); }
	(rule__Aggregate__RAssignment_3_1)
	{ after(grammarAccess.getAggregateAccess().getRAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Migration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Migration__Group__0__Impl
	rule__Migration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMigrationAccess().getAggregateKeyword_0()); }
	'aggregate'
	{ after(grammarAccess.getMigrationAccess().getAggregateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Migration__Group__1__Impl
	rule__Migration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMigrationAccess().getOnKeyword_1()); }
	'on'
	{ after(grammarAccess.getMigrationAccess().getOnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Migration__Group__2__Impl
	rule__Migration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMigrationAccess().getRAssignment_2()); }
	(rule__Migration__RAssignment_2)
	{ after(grammarAccess.getMigrationAccess().getRAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Migration__Group__3__Impl
	rule__Migration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMigrationAccess().getGroup_3()); }
	(rule__Migration__Group_3__0)*
	{ after(grammarAccess.getMigrationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Migration__Group__4__Impl
	rule__Migration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMigrationAccess().getWhileKeyword_4()); }
	'while'
	{ after(grammarAccess.getMigrationAccess().getWhileKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Migration__Group__5__Impl
	rule__Migration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMigrationAccess().getAvoidingKeyword_5()); }
	'avoiding'
	{ after(grammarAccess.getMigrationAccess().getAvoidingKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Migration__Group__6__Impl
	rule__Migration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMigrationAccess().getTAssignment_6()); }
	(rule__Migration__TAssignment_6)
	{ after(grammarAccess.getMigrationAccess().getTAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Migration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMigrationAccess().getGroup_7()); }
	(rule__Migration__Group_7__0)*
	{ after(grammarAccess.getMigrationAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Migration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Migration__Group_3__0__Impl
	rule__Migration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMigrationAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getMigrationAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Migration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMigrationAccess().getRAssignment_3_1()); }
	(rule__Migration__RAssignment_3_1)
	{ after(grammarAccess.getMigrationAccess().getRAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Migration__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Migration__Group_7__0__Impl
	rule__Migration__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMigrationAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getMigrationAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Migration__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMigrationAccess().getTAssignment_7_1()); }
	(rule__Migration__TAssignment_7_1)
	{ after(grammarAccess.getMigrationAccess().getTAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Foraging__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group__0__Impl
	rule__Foraging__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getCollectKeyword_0()); }
	'collect'
	{ after(grammarAccess.getForagingAccess().getCollectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group__1__Impl
	rule__Foraging__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getFoodKeyword_1()); }
	'food'
	{ after(grammarAccess.getForagingAccess().getFoodKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group__2__Impl
	rule__Foraging__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getFromKeyword_2()); }
	'from'
	{ after(grammarAccess.getForagingAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group__3__Impl
	rule__Foraging__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getSourceAssignment_3()); }
	(rule__Foraging__SourceAssignment_3)
	{ after(grammarAccess.getForagingAccess().getSourceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group__4__Impl
	rule__Foraging__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getGroup_4()); }
	(rule__Foraging__Group_4__0)*
	{ after(grammarAccess.getForagingAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group__5__Impl
	rule__Foraging__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getAndKeyword_5()); }
	'and'
	{ after(grammarAccess.getForagingAccess().getAndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group__6__Impl
	rule__Foraging__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getBringKeyword_6()); }
	'bring'
	{ after(grammarAccess.getForagingAccess().getBringKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group__7__Impl
	rule__Foraging__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getItKeyword_7()); }
	'it'
	{ after(grammarAccess.getForagingAccess().getItKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group__8__Impl
	rule__Foraging__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getBackKeyword_8()); }
	'back'
	{ after(grammarAccess.getForagingAccess().getBackKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group__9__Impl
	rule__Foraging__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getToKeyword_9()); }
	'to'
	{ after(grammarAccess.getForagingAccess().getToKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group__10__Impl
	rule__Foraging__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getNestAssignment_10()); }
	(rule__Foraging__NestAssignment_10)
	{ after(grammarAccess.getForagingAccess().getNestAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getGroup_11()); }
	(rule__Foraging__Group_11__0)*
	{ after(grammarAccess.getForagingAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Foraging__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group_4__0__Impl
	rule__Foraging__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getForagingAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getSourceAssignment_4_1()); }
	(rule__Foraging__SourceAssignment_4_1)
	{ after(grammarAccess.getForagingAccess().getSourceAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Foraging__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group_11__0__Impl
	rule__Foraging__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getCommaKeyword_11_0()); }
	','
	{ after(grammarAccess.getForagingAccess().getCommaKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foraging__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForagingAccess().getSourceAssignment_11_1()); }
	(rule__Foraging__SourceAssignment_11_1)
	{ after(grammarAccess.getForagingAccess().getSourceAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__0__Impl
	rule__Environment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getGroup_0()); }
	(rule__Environment__Group_0__0)?
	{ after(grammarAccess.getEnvironmentAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getEnvironmentAssignment_1()); }
	(rule__Environment__EnvironmentAssignment_1)*
	{ after(grammarAccess.getEnvironmentAccess().getEnvironmentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_0__0__Impl
	rule__Environment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getTheKeyword_0_0()); }
	'The'
	{ after(grammarAccess.getEnvironmentAccess().getTheKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_0__1__Impl
	rule__Environment__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getArenaKeyword_0_1()); }
	'arena'
	{ after(grammarAccess.getEnvironmentAccess().getArenaKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_0__2__Impl
	rule__Environment__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getContainsKeyword_0_2()); }
	'contains'
	{ after(grammarAccess.getEnvironmentAccess().getContainsKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_0__3__Impl
	rule__Environment__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getTheKeyword_0_3()); }
	'the'
	{ after(grammarAccess.getEnvironmentAccess().getTheKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_0__4__Impl
	rule__Environment__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getFollowingKeyword_0_4()); }
	'following'
	{ after(grammarAccess.getEnvironmentAccess().getFollowingKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_0__5__Impl
	rule__Environment__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getElementsKeyword_0_5()); }
	'elements'
	{ after(grammarAccess.getEnvironmentAccess().getElementsKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getColonKeyword_0_6()); }
	':'
	{ after(grammarAccess.getEnvironmentAccess().getColonKeyword_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProbabilisticDecription__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilisticDecription__Group__0__Impl
	rule__ProbabilisticDecription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilisticDecriptionAccess().getDistributedKeyword_0()); }
	'distributed'
	{ after(grammarAccess.getProbabilisticDecriptionAccess().getDistributedKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilisticDecription__Group__1__Impl
	rule__ProbabilisticDecription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilisticDecriptionAccess().getWithKeyword_1()); }
	'with'
	{ after(grammarAccess.getProbabilisticDecriptionAccess().getWithKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilisticDecription__Group__2__Impl
	rule__ProbabilisticDecription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilisticDecriptionAccess().getAKeyword_2()); }
	'a'
	{ after(grammarAccess.getProbabilisticDecriptionAccess().getAKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilisticDecription__Group__3__Impl
	rule__ProbabilisticDecription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilisticDecriptionAccess().getDisAssignment_3()); }
	(rule__ProbabilisticDecription__DisAssignment_3)
	{ after(grammarAccess.getProbabilisticDecriptionAccess().getDisAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilisticDecription__Group__4__Impl
	rule__ProbabilisticDecription__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilisticDecriptionAccess().getDistributionKeyword_4()); }
	'distribution'
	{ after(grammarAccess.getProbabilisticDecriptionAccess().getDistributionKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilisticDecription__Group__5__Impl
	rule__ProbabilisticDecription__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilisticDecriptionAccess().getInKeyword_5()); }
	'in'
	{ after(grammarAccess.getProbabilisticDecriptionAccess().getInKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProbabilisticDecription__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProbabilisticDecriptionAccess().getKAssignment_6()); }
	(rule__ProbabilisticDecription__KAssignment_6)
	{ after(grammarAccess.getProbabilisticDecriptionAccess().getKAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MissionObjective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__0__Impl
	rule__MissionObjective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getTheKeyword_0()); }
	'The'
	{ after(grammarAccess.getMissionObjectiveAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__1__Impl
	rule__MissionObjective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getPerformanceKeyword_1()); }
	'performance'
	{ after(grammarAccess.getMissionObjectiveAccess().getPerformanceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__2__Impl
	rule__MissionObjective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getMeasureKeyword_2()); }
	'measure'
	{ after(grammarAccess.getMissionObjectiveAccess().getMeasureKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__3__Impl
	rule__MissionObjective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getIsKeyword_3()); }
	'is'
	{ after(grammarAccess.getMissionObjectiveAccess().getIsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__4__Impl
	rule__MissionObjective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getDefinedKeyword_4()); }
	'defined'
	{ after(grammarAccess.getMissionObjectiveAccess().getDefinedKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__5__Impl
	rule__MissionObjective__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getInKeyword_5()); }
	'in'
	{ after(grammarAccess.getMissionObjectiveAccess().getInKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__6__Impl
	rule__MissionObjective__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getTermsKeyword_6()); }
	'terms'
	{ after(grammarAccess.getMissionObjectiveAccess().getTermsKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__7__Impl
	rule__MissionObjective__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getOfKeyword_7()); }
	'of'
	{ after(grammarAccess.getMissionObjectiveAccess().getOfKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__8__Impl
	rule__MissionObjective__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getAnKeyword_8()); }
	'an'
	{ after(grammarAccess.getMissionObjectiveAccess().getAnKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__9__Impl
	rule__MissionObjective__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getObjectiveKeyword_9()); }
	'objective'
	{ after(grammarAccess.getMissionObjectiveAccess().getObjectiveKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__10__Impl
	rule__MissionObjective__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getFunctionKeyword_10()); }
	'function'
	{ after(grammarAccess.getMissionObjectiveAccess().getFunctionKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__11__Impl
	rule__MissionObjective__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getToKeyword_11()); }
	'to'
	{ after(grammarAccess.getMissionObjectiveAccess().getToKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__12__Impl
	rule__MissionObjective__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getBeKeyword_12()); }
	'be'
	{ after(grammarAccess.getMissionObjectiveAccess().getBeKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__13__Impl
	rule__MissionObjective__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getTypeAssignment_13()); }
	(rule__MissionObjective__TypeAssignment_13)
	{ after(grammarAccess.getMissionObjectiveAccess().getTypeAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__14__Impl
	rule__MissionObjective__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getTheKeyword_14()); }
	'The'
	{ after(grammarAccess.getMissionObjectiveAccess().getTheKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__15__Impl
	rule__MissionObjective__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getObjectiveKeyword_15()); }
	'objective'
	{ after(grammarAccess.getMissionObjectiveAccess().getObjectiveKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__16__Impl
	rule__MissionObjective__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getFunctionKeyword_16()); }
	'function'
	{ after(grammarAccess.getMissionObjectiveAccess().getFunctionKeyword_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__17__Impl
	rule__MissionObjective__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getIsKeyword_17()); }
	'is'
	{ after(grammarAccess.getMissionObjectiveAccess().getIsKeyword_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__18
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__18__Impl
	rule__MissionObjective__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__18__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getComputedKeyword_18()); }
	'computed'
	{ after(grammarAccess.getMissionObjectiveAccess().getComputedKeyword_18()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__19
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__19__Impl
	rule__MissionObjective__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__19__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getAsKeyword_19()); }
	'as'
	{ after(grammarAccess.getMissionObjectiveAccess().getAsKeyword_19()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__20
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__20__Impl
	rule__MissionObjective__Group__21
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__20__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getFollowsKeyword_20()); }
	'follows:'
	{ after(grammarAccess.getMissionObjectiveAccess().getFollowsKeyword_20()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__21
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MissionObjective__Group__21__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__Group__21__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionObjectiveAccess().getInAssignment_21()); }
	(rule__MissionObjective__InAssignment_21)*
	{ after(grammarAccess.getMissionObjectiveAccess().getInAssignment_21()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Indicator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Indicator__Group__0__Impl
	rule__Indicator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Indicator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndicatorAccess().getSpAssignment_0()); }
	(rule__Indicator__SpAssignment_0)
	{ after(grammarAccess.getIndicatorAccess().getSpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indicator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Indicator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Indicator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndicatorAccess().getOcAssignment_1()); }
	(rule__Indicator__OcAssignment_1)
	{ after(grammarAccess.getIndicatorAccess().getOcAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicIndicator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicIndicator__Group__0__Impl
	rule__AtomicIndicator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicIndicator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicIndicatorAccess().getEachKeyword_0()); }
	'each'
	{ after(grammarAccess.getAtomicIndicatorAccess().getEachKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicIndicator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicIndicator__Group__1__Impl
	rule__AtomicIndicator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicIndicator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicIndicatorAccess().getRobotKeyword_1()); }
	'robot'
	{ after(grammarAccess.getAtomicIndicatorAccess().getRobotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicIndicator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicIndicator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicIndicator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicIndicatorAccess().getOcAssignment_2()); }
	(rule__AtomicIndicator__OcAssignment_2)
	{ after(grammarAccess.getAtomicIndicatorAccess().getOcAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompoundIndicator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundIndicator__Group__0__Impl
	rule__CompoundIndicator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundIndicator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundIndicatorAccess().getTheKeyword_0()); }
	'the'
	{ after(grammarAccess.getCompoundIndicatorAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundIndicator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundIndicator__Group__1__Impl
	rule__CompoundIndicator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundIndicator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundIndicatorAccess().getSwarmKeyword_1()); }
	'swarm'
	{ after(grammarAccess.getCompoundIndicatorAccess().getSwarmKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundIndicator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompoundIndicator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundIndicator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompoundIndicatorAccess().getOcAssignment_2()); }
	(rule__CompoundIndicator__OcAssignment_2)
	{ after(grammarAccess.getCompoundIndicatorAccess().getOcAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Penalty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Penalty__Group__0__Impl
	rule__Penalty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPenaltyAccess().getGetsKeyword_0()); }
	'gets'
	{ after(grammarAccess.getPenaltyAccess().getGetsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Penalty__Group__1__Impl
	rule__Penalty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPenaltyAccess().getAKeyword_1()); }
	'a'
	{ after(grammarAccess.getPenaltyAccess().getAKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Penalty__Group__2__Impl
	rule__Penalty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPenaltyAccess().getPenaltyKeyword_2()); }
	'penalty'
	{ after(grammarAccess.getPenaltyAccess().getPenaltyKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Penalty__Group__3__Impl
	rule__Penalty__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPenaltyAccess().getKAssignment_3()); }
	(rule__Penalty__KAssignment_3)
	{ after(grammarAccess.getPenaltyAccess().getKAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Penalty__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPenaltyAccess().getCAssignment_4()); }
	(rule__Penalty__CAssignment_4)
	{ after(grammarAccess.getPenaltyAccess().getCAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reward__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reward__Group__0__Impl
	rule__Reward__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRewardAccess().getGetsKeyword_0()); }
	'gets'
	{ after(grammarAccess.getRewardAccess().getGetsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reward__Group__1__Impl
	rule__Reward__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRewardAccess().getAKeyword_1()); }
	'a'
	{ after(grammarAccess.getRewardAccess().getAKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reward__Group__2__Impl
	rule__Reward__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRewardAccess().getRewardKeyword_2()); }
	'reward'
	{ after(grammarAccess.getRewardAccess().getRewardKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reward__Group__3__Impl
	rule__Reward__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRewardAccess().getKAssignment_3()); }
	(rule__Reward__KAssignment_3)
	{ after(grammarAccess.getRewardAccess().getKAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reward__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRewardAccess().getCAssignment_4()); }
	(rule__Reward__CAssignment_4)
	{ after(grammarAccess.getRewardAccess().getCAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__0__Impl
	rule__Condition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getAlternatives_0_0()); }
	(rule__Condition__Alternatives_0_0)
	{ after(grammarAccess.getConditionAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__1__Impl
	rule__Condition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getItKeyword_0_1()); }
	'it'
	{ after(grammarAccess.getConditionAccess().getItKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__2__Impl
	rule__Condition__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getIsKeyword_0_2()); }
	'is'
	{ after(grammarAccess.getConditionAccess().getIsKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__3__Impl
	rule__Condition__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getAlternatives_0_3()); }
	(rule__Condition__Alternatives_0_3)
	{ after(grammarAccess.getConditionAccess().getAlternatives_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRAssignment_0_4()); }
	(rule__Condition__RAssignment_0_4)
	{ after(grammarAccess.getConditionAccess().getRAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__0__Impl
	rule__Condition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getAlternatives_1_0()); }
	(rule__Condition__Alternatives_1_0)
	{ after(grammarAccess.getConditionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__1__Impl
	rule__Condition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getThereKeyword_1_1()); }
	'there'
	{ after(grammarAccess.getConditionAccess().getThereKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__2__Impl
	rule__Condition__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getAreKeyword_1_2()); }
	'are'
	{ after(grammarAccess.getConditionAccess().getAreKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__3__Impl
	rule__Condition__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getMoreKeyword_1_3()); }
	'more'
	{ after(grammarAccess.getConditionAccess().getMoreKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__4__Impl
	rule__Condition__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getThanKeyword_1_4()); }
	'than'
	{ after(grammarAccess.getConditionAccess().getThanKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__5__Impl
	rule__Condition__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getNAssignment_1_5()); }
	(rule__Condition__NAssignment_1_5)
	{ after(grammarAccess.getConditionAccess().getNAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__6__Impl
	rule__Condition__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRobotsKeyword_1_6()); }
	'robots'
	{ after(grammarAccess.getConditionAccess().getRobotsKeyword_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__7__Impl
	rule__Condition__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getAlternatives_1_7()); }
	(rule__Condition__Alternatives_1_7)
	{ after(grammarAccess.getConditionAccess().getAlternatives_1_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__8__Impl
	rule__Condition__Group_1__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRAssignment_1_8()); }
	(rule__Condition__RAssignment_1_8)
	{ after(grammarAccess.getConditionAccess().getRAssignment_1_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getCommaKeyword_1_9()); }
	(',')*
	{ after(grammarAccess.getConditionAccess().getCommaKeyword_1_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_2__0__Impl
	rule__Condition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getAlternatives_2_0()); }
	(rule__Condition__Alternatives_2_0)
	{ after(grammarAccess.getConditionAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_2__1__Impl
	rule__Condition__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getItKeyword_2_1()); }
	'it'
	{ after(grammarAccess.getConditionAccess().getItKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_2__2__Impl
	rule__Condition__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getGoesKeyword_2_2()); }
	'goes'
	{ after(grammarAccess.getConditionAccess().getGoesKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_2__3__Impl
	rule__Condition__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getFromKeyword_2_3()); }
	'from'
	{ after(grammarAccess.getConditionAccess().getFromKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_2__4__Impl
	rule__Condition__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRAssignment_2_4()); }
	(rule__Condition__RAssignment_2_4)
	{ after(grammarAccess.getConditionAccess().getRAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_2__5__Impl
	rule__Condition__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getIntoKeyword_2_5()); }
	'into'
	{ after(grammarAccess.getConditionAccess().getIntoKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getNestAssignment_2_6()); }
	(rule__Condition__NestAssignment_2_6)
	{ after(grammarAccess.getConditionAccess().getNestAssignment_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentElement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentElement__Group_4__0__Impl
	rule__EnvironmentElement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentElement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentElementAccess().getAKeyword_4_0()); }
	'A'
	{ after(grammarAccess.getEnvironmentElementAccess().getAKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentElement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentElement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentElement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentElementAccess().getRegionParserRuleCall_4_1()); }
	ruleRegion
	{ after(grammarAccess.getEnvironmentElementAccess().getRegionParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementDescription__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementDescription__Group__0__Impl
	rule__ElementDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementDescriptionAccess().getThereKeyword_0()); }
	'There'
	{ after(grammarAccess.getElementDescriptionAccess().getThereKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementDescription__Group__1__Impl
	rule__ElementDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementDescriptionAccess().getAreKeyword_1()); }
	'are'
	{ after(grammarAccess.getElementDescriptionAccess().getAreKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementDescription__Group__2__Impl
	rule__ElementDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementDescriptionAccess().getXAssignment_2()); }
	(rule__ElementDescription__XAssignment_2)
	{ after(grammarAccess.getElementDescriptionAccess().getXAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementDescription__Group__3__Impl
	rule__ElementDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementDescriptionAccess().getObjAssignment_3()); }
	(rule__ElementDescription__ObjAssignment_3)
	{ after(grammarAccess.getElementDescriptionAccess().getObjAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementDescription__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementDescriptionAccess().getRAssignment_4()); }
	(rule__ElementDescription__RAssignment_4)
	{ after(grammarAccess.getElementDescriptionAccess().getRAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__0__Impl
	rule__Element__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getObAssignment_0()); }
	(rule__Element__ObAssignment_0)
	{ after(grammarAccess.getElementAccess().getObAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__1__Impl
	rule__Element__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getGroup_1()); }
	(rule__Element__Group_1__0)?
	{ after(grammarAccess.getElementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__2__Impl
	rule__Element__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getGroup_2()); }
	(rule__Element__Group_2__0)?
	{ after(grammarAccess.getElementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getGroup_3()); }
	(rule__Element__Group_3__0)?
	{ after(grammarAccess.getElementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_1__0__Impl
	rule__Element__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getWithKeyword_1_0()); }
	'with'
	{ after(grammarAccess.getElementAccess().getWithKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_1__1__Impl
	rule__Element__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getDimensionsKeyword_1_1()); }
	'dimensions'
	{ after(grammarAccess.getElementAccess().getDimensionsKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_1__2__Impl
	rule__Element__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getColonKeyword_1_2()); }
	':'
	{ after(grammarAccess.getElementAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getDAssignment_1_3()); }
	(rule__Element__DAssignment_1_3)
	{ after(grammarAccess.getElementAccess().getDAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__0__Impl
	rule__Element__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getAndKeyword_2_0()); }
	'and'
	{ after(grammarAccess.getElementAccess().getAndKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__1__Impl
	rule__Element__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getWeightKeyword_2_1()); }
	'weight'
	{ after(grammarAccess.getElementAccess().getWeightKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__2__Impl
	rule__Element__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getWAssignment_2_2()); }
	(rule__Element__WAssignment_2_2)
	{ after(grammarAccess.getElementAccess().getWAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getSmAssignment_2_3()); }
	(rule__Element__SmAssignment_2_3)
	{ after(grammarAccess.getElementAccess().getSmAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_3__0__Impl
	rule__Element__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getWithKeyword_3_0()); }
	'with'
	{ after(grammarAccess.getElementAccess().getWithKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_3__1__Impl
	rule__Element__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getIntensityKeyword_3_1()); }
	'intensity'
	{ after(grammarAccess.getElementAccess().getIntensityKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_3__2__Impl
	rule__Element__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getColonKeyword_3_2()); }
	':'
	{ after(grammarAccess.getElementAccess().getColonKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getItAssignment_3_3()); }
	(rule__Element__ItAssignment_3_3)
	{ after(grammarAccess.getElementAccess().getItAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__El__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__El__Group_2__0__Impl
	rule__El__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__El__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElAccess().getLightKeyword_2_0()); }
	'light'
	{ after(grammarAccess.getElAccess().getLightKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__El__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__El__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__El__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElAccess().getSourcesKeyword_2_1()); }
	'sources'
	{ after(grammarAccess.getElAccess().getSourcesKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__0__Impl
	rule__Object__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getObjAssignment_0()); }
	(rule__Object__ObjAssignment_0)
	{ after(grammarAccess.getObjectAccess().getObjAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__1__Impl
	rule__Object__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getObjectKeyword_1()); }
	'object'
	{ after(grammarAccess.getObjectAccess().getObjectKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__2__Impl
	rule__Object__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getObjectAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__3__Impl
	rule__Object__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getAKeyword_3()); }
	'a'
	{ after(grammarAccess.getObjectAccess().getAKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getRAssignment_4()); }
	(rule__Object__RAssignment_4)
	{ after(grammarAccess.getObjectAccess().getRAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Obstacle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstacle__Group__0__Impl
	rule__Obstacle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstacleAccess().getObsAssignment_0()); }
	(rule__Obstacle__ObsAssignment_0)
	{ after(grammarAccess.getObstacleAccess().getObsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstacle__Group__1__Impl
	rule__Obstacle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstacleAccess().getObstacleKeyword_1()); }
	'obstacle'
	{ after(grammarAccess.getObstacleAccess().getObstacleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstacle__Group__2__Impl
	rule__Obstacle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstacleAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getObstacleAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstacle__Group__3__Impl
	rule__Obstacle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstacleAccess().getAKeyword_3()); }
	'a'
	{ after(grammarAccess.getObstacleAccess().getAKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obstacle__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObstacleAccess().getRAssignment_4()); }
	(rule__Obstacle__RAssignment_4)
	{ after(grammarAccess.getObstacleAccess().getRAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Patch__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patch__Group__0__Impl
	rule__Patch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Patch__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatchAccess().getAKeyword_0()); }
	'A'
	{ after(grammarAccess.getPatchAccess().getAKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patch__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patch__Group__1__Impl
	rule__Patch__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Patch__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatchAccess().getCAssignment_1()); }
	(rule__Patch__CAssignment_1)
	{ after(grammarAccess.getPatchAccess().getCAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patch__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patch__Group__2__Impl
	rule__Patch__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Patch__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatchAccess().getPatchKeyword_2()); }
	'patch'
	{ after(grammarAccess.getPatchAccess().getPatchKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patch__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patch__Group__3__Impl
	rule__Patch__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Patch__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatchAccess().getAsKeyword_3()); }
	'as'
	{ after(grammarAccess.getPatchAccess().getAsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patch__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patch__Group__4__Impl
	rule__Patch__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Patch__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatchAccess().getAKeyword_4()); }
	'a'
	{ after(grammarAccess.getPatchAccess().getAKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patch__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patch__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Patch__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatchAccess().getRAssignment_5()); }
	(rule__Patch__RAssignment_5)
	{ after(grammarAccess.getPatchAccess().getRAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Light__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__0__Impl
	rule__Light__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getLAssignment_0()); }
	(rule__Light__LAssignment_0)
	{ after(grammarAccess.getLightAccess().getLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__1__Impl
	rule__Light__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getLightKeyword_1()); }
	'light'
	{ after(grammarAccess.getLightAccess().getLightKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__2__Impl
	rule__Light__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getSourceKeyword_2()); }
	'source'
	{ after(grammarAccess.getLightAccess().getSourceKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__3__Impl
	rule__Light__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getEmittingKeyword_3()); }
	'emitting'
	{ after(grammarAccess.getLightAccess().getEmittingKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__4__Impl
	rule__Light__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getAKeyword_4()); }
	'a'
	{ after(grammarAccess.getLightAccess().getAKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__5__Impl
	rule__Light__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getCAssignment_5()); }
	(rule__Light__CAssignment_5)
	{ after(grammarAccess.getLightAccess().getCAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__6__Impl
	rule__Light__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getLightKeyword_6()); }
	'light'
	{ after(grammarAccess.getLightAccess().getLightKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__7__Impl
	rule__Light__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getWithKeyword_7()); }
	'with'
	{ after(grammarAccess.getLightAccess().getWithKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__8__Impl
	rule__Light__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getIntensityKeyword_8()); }
	'intensity'
	{ after(grammarAccess.getLightAccess().getIntensityKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__9__Impl
	rule__Light__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getItAssignment_9()); }
	(rule__Light__ItAssignment_9)
	{ after(grammarAccess.getLightAccess().getItAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__10__Impl
	rule__Light__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getIsKeyword_10()); }
	'is'
	{ after(grammarAccess.getLightAccess().getIsKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__11__Impl
	rule__Light__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getPlacedKeyword_11()); }
	'placed'
	{ after(grammarAccess.getLightAccess().getPlacedKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__12__Impl
	rule__Light__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getAtKeyword_12()); }
	'at'
	{ after(grammarAccess.getLightAccess().getAtKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Light__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLightAccess().getPAssignment_13()); }
	(rule__Light__PAssignment_13)
	{ after(grammarAccess.getLightAccess().getPAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Position__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group__0__Impl
	rule__Position__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getAlternatives_0()); }
	(rule__Position__Alternatives_0)?
	{ after(grammarAccess.getPositionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group__1__Impl
	rule__Position__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getPointKeyword_1()); }
	'point'
	{ after(grammarAccess.getPositionAccess().getPointKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getPointAssignment_2()); }
	(rule__Position__PointAssignment_2)
	{ after(grammarAccess.getPositionAccess().getPointAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Position__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group_0_0__0__Impl
	rule__Position__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getCenterKeyword_0_0_0()); }
	'center'
	{ after(grammarAccess.getPositionAccess().getCenterKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Position__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPositionAccess().getAtKeyword_0_0_1()); }
	'at'
	{ after(grammarAccess.getPositionAccess().getAtKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arena__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arena__Group__0__Impl
	rule__Arena__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArenaAccess().getTheKeyword_0()); }
	'The'
	{ after(grammarAccess.getArenaAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arena__Group__1__Impl
	rule__Arena__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArenaAccess().getArenaKeyword_1()); }
	'arena'
	{ after(grammarAccess.getArenaAccess().getArenaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arena__Group__2__Impl
	rule__Arena__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArenaAccess().getIsKeyword_2()); }
	'is'
	{ after(grammarAccess.getArenaAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arena__Group__3__Impl
	rule__Arena__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArenaAccess().getAKeyword_3()); }
	'a'
	{ after(grammarAccess.getArenaAccess().getAKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arena__Group__4__Impl
	rule__Arena__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArenaAccess().getSAssignment_4()); }
	(rule__Arena__SAssignment_4)
	{ after(grammarAccess.getArenaAccess().getSAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arena__Group__5__Impl
	rule__Arena__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArenaAccess().getSurroundedKeyword_5()); }
	'surrounded'
	{ after(grammarAccess.getArenaAccess().getSurroundedKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arena__Group__6__Impl
	rule__Arena__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArenaAccess().getByKeyword_6()); }
	'by'
	{ after(grammarAccess.getArenaAccess().getByKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arena__Group__7__Impl
	rule__Arena__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArenaAccess().getWallsKeyword_7()); }
	'walls'
	{ after(grammarAccess.getArenaAccess().getWallsKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arena__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArenaAccess().getFullStopKeyword_8()); }
	'.'
	{ after(grammarAccess.getArenaAccess().getFullStopKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__0__Impl
	rule__Region__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getColorsAssignment_0()); }
	(rule__Region__ColorsAssignment_0)?
	{ after(grammarAccess.getRegionAccess().getColorsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__1__Impl
	rule__Region__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getShape2dAssignment_1()); }
	(rule__Region__Shape2dAssignment_1)
	{ after(grammarAccess.getRegionAccess().getShape2dAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__2__Impl
	rule__Region__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getNameAssignment_2()); }
	(rule__Region__NameAssignment_2)
	{ after(grammarAccess.getRegionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Region__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegionAccess().getRegionAssignment_3()); }
	(rule__Region__RegionAssignment_3)
	{ after(grammarAccess.getRegionAccess().getRegionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition1__Group__0__Impl
	rule__Definition1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition1Access().getGroup_0()); }
	(rule__Definition1__Group_0__0)?
	{ after(grammarAccess.getDefinition1Access().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition1Access().getGroup_1()); }
	(rule__Definition1__Group_1__0)?
	{ after(grammarAccess.getDefinition1Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition1__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition1__Group_0__0__Impl
	rule__Definition1__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition1__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition1Access().getWithKeyword_0_0()); }
	'with'
	{ after(grammarAccess.getDefinition1Access().getWithKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition1__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition1__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition1__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition1Access().getReferencepointAssignment_0_1()); }
	(rule__Definition1__ReferencepointAssignment_0_1)
	{ after(grammarAccess.getDefinition1Access().getReferencepointAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition1__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition1__Group_1__0__Impl
	rule__Definition1__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition1__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition1Access().getAndKeyword_1_0()); }
	'and'
	{ after(grammarAccess.getDefinition1Access().getAndKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition1__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition1__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition1__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition1Access().getDimensionsAssignment_1_1()); }
	(rule__Definition1__DimensionsAssignment_1_1)
	{ after(grammarAccess.getDefinition1Access().getDimensionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition2__Group__0__Impl
	rule__Definition2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition2Access().getDefinedKeyword_0()); }
	'defined'
	{ after(grammarAccess.getDefinition2Access().getDefinedKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition2__Group__1__Impl
	rule__Definition2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition2Access().getThroughKeyword_1()); }
	'through'
	{ after(grammarAccess.getDefinition2Access().getThroughKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition2__Group__2__Impl
	rule__Definition2__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition2Access().getTheKeyword_2()); }
	'the'
	{ after(grammarAccess.getDefinition2Access().getTheKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition2__Group__3__Impl
	rule__Definition2__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition2Access().getFollowingKeyword_3()); }
	'following'
	{ after(grammarAccess.getDefinition2Access().getFollowingKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition2__Group__4__Impl
	rule__Definition2__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition2Access().getVerticesKeyword_4()); }
	'Vertices'
	{ after(grammarAccess.getDefinition2Access().getVerticesKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition2__Group__5__Impl
	rule__Definition2__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition2Access().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getDefinition2Access().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition2__Group__6__Impl
	rule__Definition2__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition2Access().getPointAssignment_6()); }
	(rule__Definition2__PointAssignment_6)
	{ after(grammarAccess.getDefinition2Access().getPointAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition2__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition2Access().getGroup_7()); }
	(rule__Definition2__Group_7__0)*
	{ after(grammarAccess.getDefinition2Access().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition2__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition2__Group_7__0__Impl
	rule__Definition2__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition2Access().getSemicolonKeyword_7_0()); }
	';'
	{ after(grammarAccess.getDefinition2Access().getSemicolonKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition2__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition2Access().getPointAssignment_7_1()); }
	(rule__Definition2__PointAssignment_7_1)
	{ after(grammarAccess.getDefinition2Access().getPointAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition3__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition3__Group__0__Impl
	rule__Definition3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition3__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition3Access().getWhereKeyword_0()); }
	'where'
	{ after(grammarAccess.getDefinition3Access().getWhereKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition3__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition3__Group__1__Impl
	rule__Definition3__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition3__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition3Access().getAxAssignment_1()); }
	(rule__Definition3__AxAssignment_1)
	{ after(grammarAccess.getDefinition3Access().getAxAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition3__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition3__Group__2__Impl
	rule__Definition3__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition3__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition3Access().getIsKeyword_2()); }
	'is'
	{ after(grammarAccess.getDefinition3Access().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition3__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition3__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition3__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinition3Access().getRAssignment_3()); }
	(rule__Definition3__RAssignment_3)
	{ after(grammarAccess.getDefinition3Access().getRAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dimension1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension1__Group__0__Impl
	rule__Dimension1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension1Access().getRadiusKeyword_0()); }
	'radius'
	{ after(grammarAccess.getDimension1Access().getRadiusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension1__Group__1__Impl
	rule__Dimension1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension1Access().getRAssignment_1()); }
	(rule__Dimension1__RAssignment_1)
	{ after(grammarAccess.getDimension1Access().getRAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension1__Group__2__Impl
	rule__Dimension1__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension1Access().getM1Assignment_2()); }
	(rule__Dimension1__M1Assignment_2)
	{ after(grammarAccess.getDimension1Access().getM1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension1__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension1Access().getGroup_3()); }
	(rule__Dimension1__Group_3__0)?
	{ after(grammarAccess.getDimension1Access().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dimension1__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension1__Group_3__0__Impl
	rule__Dimension1__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension1Access().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getDimension1Access().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension1__Group_3__1__Impl
	rule__Dimension1__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension1Access().getHeightKeyword_3_1()); }
	'height'
	{ after(grammarAccess.getDimension1Access().getHeightKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension1__Group_3__2__Impl
	rule__Dimension1__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension1Access().getHAssignment_3_2()); }
	(rule__Dimension1__HAssignment_3_2)
	{ after(grammarAccess.getDimension1Access().getHAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension1__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension1Access().getM2Assignment_3_3()); }
	(rule__Dimension1__M2Assignment_3_3)
	{ after(grammarAccess.getDimension1Access().getM2Assignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dimension2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension2__Group__0__Impl
	rule__Dimension2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension2Access().getLengthKeyword_0()); }
	'length'
	{ after(grammarAccess.getDimension2Access().getLengthKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension2__Group__1__Impl
	rule__Dimension2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension2Access().getLAssignment_1()); }
	(rule__Dimension2__LAssignment_1)
	{ after(grammarAccess.getDimension2Access().getLAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension2__Group__2__Impl
	rule__Dimension2__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension2Access().getM3Assignment_2()); }
	(rule__Dimension2__M3Assignment_2)
	{ after(grammarAccess.getDimension2Access().getM3Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension2__Group__3__Impl
	rule__Dimension2__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension2Access().getWidthKeyword_3()); }
	',width'
	{ after(grammarAccess.getDimension2Access().getWidthKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension2__Group__4__Impl
	rule__Dimension2__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension2Access().getWAssignment_4()); }
	(rule__Dimension2__WAssignment_4)
	{ after(grammarAccess.getDimension2Access().getWAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension2__Group__5__Impl
	rule__Dimension2__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension2Access().getM4Assignment_5()); }
	(rule__Dimension2__M4Assignment_5)
	{ after(grammarAccess.getDimension2Access().getM4Assignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension2__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension2Access().getGroup_6()); }
	(rule__Dimension2__Group_6__0)?
	{ after(grammarAccess.getDimension2Access().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dimension2__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension2__Group_6__0__Impl
	rule__Dimension2__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension2Access().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getDimension2Access().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension2__Group_6__1__Impl
	rule__Dimension2__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension2Access().getHeightKeyword_6_1()); }
	'height'
	{ after(grammarAccess.getDimension2Access().getHeightKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension2__Group_6__2__Impl
	rule__Dimension2__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension2Access().getHAssignment_6_2()); }
	(rule__Dimension2__HAssignment_6_2)
	{ after(grammarAccess.getDimension2Access().getHAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension2__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension2Access().getM5Assignment_6_3()); }
	(rule__Dimension2__M5Assignment_6_3)
	{ after(grammarAccess.getDimension2Access().getM5Assignment_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dimension3__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension3__Group__0__Impl
	rule__Dimension3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension3__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension3Access().getSideKeyword_0()); }
	'side'
	{ after(grammarAccess.getDimension3Access().getSideKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension3__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension3__Group__1__Impl
	rule__Dimension3__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension3__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension3Access().getSAssignment_1()); }
	(rule__Dimension3__SAssignment_1)
	{ after(grammarAccess.getDimension3Access().getSAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension3__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension3__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension3__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimension3Access().getM6Assignment_2()); }
	(rule__Dimension3__M6Assignment_2)
	{ after(grammarAccess.getDimension3Access().getM6Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Coordinate2D__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate2D__Group__0__Impl
	rule__Coordinate2D__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate2D__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinate2DAccess().getXAssignment_0()); }
	(rule__Coordinate2D__XAssignment_0)
	{ after(grammarAccess.getCoordinate2DAccess().getXAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate2D__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate2D__Group__1__Impl
	rule__Coordinate2D__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate2D__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinate2DAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getCoordinate2DAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate2D__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate2D__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate2D__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinate2DAccess().getYAssignment_2()); }
	(rule__Coordinate2D__YAssignment_2)
	{ after(grammarAccess.getCoordinate2DAccess().getYAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Coordinate3D__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate3D__Group__0__Impl
	rule__Coordinate3D__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate3D__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinate3DAccess().getXAssignment_0()); }
	(rule__Coordinate3D__XAssignment_0)
	{ after(grammarAccess.getCoordinate3DAccess().getXAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate3D__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate3D__Group__1__Impl
	rule__Coordinate3D__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate3D__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinate3DAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getCoordinate3DAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate3D__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate3D__Group__2__Impl
	rule__Coordinate3D__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate3D__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinate3DAccess().getYAssignment_2()); }
	(rule__Coordinate3D__YAssignment_2)
	{ after(grammarAccess.getCoordinate3DAccess().getYAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate3D__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate3D__Group__3__Impl
	rule__Coordinate3D__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate3D__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinate3DAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getCoordinate3DAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate3D__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Coordinate3D__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate3D__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoordinate3DAccess().getZAssignment_4()); }
	(rule__Coordinate3D__ZAssignment_4)
	{ after(grammarAccess.getCoordinate3DAccess().getZAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Double__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group__0__Impl
	rule__Double__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getDoubleAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group__1__Impl
	rule__Double__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getGroup_2()); }
	(rule__Double__Group_2__0)?
	{ after(grammarAccess.getDoubleAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Double__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group_2__0__Impl
	rule__Double__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getDoubleAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Double__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
	{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Lowerbound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lowerbound__Group__0__Impl
	rule__Lowerbound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lowerbound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerboundAccess().getLessKeyword_0()); }
	'less'
	{ after(grammarAccess.getLowerboundAccess().getLessKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lowerbound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lowerbound__Group__1__Impl
	rule__Lowerbound__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Lowerbound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerboundAccess().getThanKeyword_1()); }
	'than'
	{ after(grammarAccess.getLowerboundAccess().getThanKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lowerbound__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lowerbound__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lowerbound__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerboundAccess().getNAssignment_2()); }
	(rule__Lowerbound__NAssignment_2)
	{ after(grammarAccess.getLowerboundAccess().getNAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LowerorEqualbound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerorEqualbound__Group__0__Impl
	rule__LowerorEqualbound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerorEqualboundAccess().getLessKeyword_0()); }
	'less'
	{ after(grammarAccess.getLowerorEqualboundAccess().getLessKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerorEqualbound__Group__1__Impl
	rule__LowerorEqualbound__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerorEqualboundAccess().getOrKeyword_1()); }
	'or'
	{ after(grammarAccess.getLowerorEqualboundAccess().getOrKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerorEqualbound__Group__2__Impl
	rule__LowerorEqualbound__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerorEqualboundAccess().getEqualKeyword_2()); }
	'equal'
	{ after(grammarAccess.getLowerorEqualboundAccess().getEqualKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerorEqualbound__Group__3__Impl
	rule__LowerorEqualbound__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerorEqualboundAccess().getThanKeyword_3()); }
	'than'
	{ after(grammarAccess.getLowerorEqualboundAccess().getThanKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LowerorEqualbound__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerorEqualboundAccess().getNAssignment_4()); }
	(rule__LowerorEqualbound__NAssignment_4)
	{ after(grammarAccess.getLowerorEqualboundAccess().getNAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Upperbound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Upperbound__Group__0__Impl
	rule__Upperbound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Upperbound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperboundAccess().getMoreKeyword_0()); }
	'more'
	{ after(grammarAccess.getUpperboundAccess().getMoreKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Upperbound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Upperbound__Group__1__Impl
	rule__Upperbound__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Upperbound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperboundAccess().getThanKeyword_1()); }
	'than'
	{ after(grammarAccess.getUpperboundAccess().getThanKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Upperbound__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Upperbound__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Upperbound__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperboundAccess().getNAssignment_2()); }
	(rule__Upperbound__NAssignment_2)
	{ after(grammarAccess.getUpperboundAccess().getNAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpperorEqualbound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperorEqualbound__Group__0__Impl
	rule__UpperorEqualbound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperorEqualboundAccess().getMoreKeyword_0()); }
	'more'
	{ after(grammarAccess.getUpperorEqualboundAccess().getMoreKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperorEqualbound__Group__1__Impl
	rule__UpperorEqualbound__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperorEqualboundAccess().getOrKeyword_1()); }
	'or'
	{ after(grammarAccess.getUpperorEqualboundAccess().getOrKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperorEqualbound__Group__2__Impl
	rule__UpperorEqualbound__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperorEqualboundAccess().getEqualKeyword_2()); }
	'equal'
	{ after(grammarAccess.getUpperorEqualboundAccess().getEqualKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperorEqualbound__Group__3__Impl
	rule__UpperorEqualbound__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperorEqualboundAccess().getThanKeyword_3()); }
	'than'
	{ after(grammarAccess.getUpperorEqualboundAccess().getThanKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpperorEqualbound__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperorEqualboundAccess().getNAssignment_4()); }
	(rule__UpperorEqualbound__NAssignment_4)
	{ after(grammarAccess.getUpperorEqualboundAccess().getNAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_0__0__Impl
	rule__Interval__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getNAssignment_0_0()); }
	(rule__Interval__NAssignment_0_0)
	{ after(grammarAccess.getIntervalAccess().getNAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_0__1__Impl
	rule__Interval__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getToKeyword_0_1()); }
	'to'
	{ after(grammarAccess.getIntervalAccess().getToKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getMAssignment_0_2()); }
	(rule__Interval__MAssignment_0_2)
	{ after(grammarAccess.getIntervalAccess().getMAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_1__0__Impl
	rule__Interval__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getBetweenKeyword_1_0()); }
	'between'
	{ after(grammarAccess.getIntervalAccess().getBetweenKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_1__1__Impl
	rule__Interval__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getNAssignment_1_1()); }
	(rule__Interval__NAssignment_1_1)
	{ after(grammarAccess.getIntervalAccess().getNAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_1__2__Impl
	rule__Interval__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getAndKeyword_1_2()); }
	'and'
	{ after(grammarAccess.getIntervalAccess().getAndKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getMAssignment_1_3()); }
	(rule__Interval__MAssignment_1_3)
	{ after(grammarAccess.getIntervalAccess().getMAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ArenasAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getArenasArenaParserRuleCall_0_0()); }
		ruleArena
		{ after(grammarAccess.getModelAccess().getArenasArenaParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__EnvAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEnvEnvironmentParserRuleCall_1_0()); }
		ruleEnvironment
		{ after(grammarAccess.getModelAccess().getEnvEnvironmentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SwAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSwSwarmconfParserRuleCall_2_0()); }
		ruleSwarmconf
		{ after(grammarAccess.getModelAccess().getSwSwarmconfParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__MsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getMsMissionSpecificationParserRuleCall_3_0()); }
		ruleMissionSpecification
		{ after(grammarAccess.getModelAccess().getMsMissionSpecificationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__XAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwarmconfAccess().getXRangeParserRuleCall_5_0()); }
		ruleRange
		{ after(grammarAccess.getSwarmconfAccess().getXRangeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__RAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwarmconfAccess().getRRobotParserRuleCall_6_0()); }
		ruleRobot
		{ after(grammarAccess.getSwarmconfAccess().getRRobotParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Swarmconf__PrAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwarmconfAccess().getPrProbabilisticDecriptionParserRuleCall_7_0()); }
		ruleProbabilisticDecription
		{ after(grammarAccess.getSwarmconfAccess().getPrProbabilisticDecriptionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionSpecification__MAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionSpecificationAccess().getMMissionParserRuleCall_0_0()); }
		ruleMission
		{ after(grammarAccess.getMissionSpecificationAccess().getMMissionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionSpecification__MtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionSpecificationAccess().getMtMissionTimeParserRuleCall_1_0()); }
		ruleMissionTime
		{ after(grammarAccess.getMissionSpecificationAccess().getMtMissionTimeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionSpecification__ObAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionSpecificationAccess().getObMissionObjectiveParserRuleCall_2_0()); }
		ruleMissionObjective
		{ after(grammarAccess.getMissionSpecificationAccess().getObMissionObjectiveParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__TAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionTimeAccess().getTRangeParserRuleCall_7_0()); }
		ruleRange
		{ after(grammarAccess.getMissionTimeAccess().getTRangeParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionTime__MAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionTimeAccess().getMMetricParserRuleCall_8_0()); }
		ruleMetric
		{ after(grammarAccess.getMissionTimeAccess().getMMetricParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__TAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getTTaskParserRuleCall_7_0()); }
		ruleTask
		{ after(grammarAccess.getMissionAccess().getTTaskParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__RAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregateAccess().getRRegionCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAggregateAccess().getRRegionIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAggregateAccess().getRRegionIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAggregateAccess().getRRegionCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__RAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregateAccess().getRRegionCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getAggregateAccess().getRRegionIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAggregateAccess().getRRegionIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getAggregateAccess().getRRegionCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__RAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMigrationAccess().getRRegionCrossReference_2_0()); }
		(
			{ before(grammarAccess.getMigrationAccess().getRRegionIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMigrationAccess().getRRegionIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getMigrationAccess().getRRegionCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__RAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMigrationAccess().getRRegionCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getMigrationAccess().getRRegionIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMigrationAccess().getRRegionIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getMigrationAccess().getRRegionCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__TAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMigrationAccess().getTRegionCrossReference_6_0()); }
		(
			{ before(grammarAccess.getMigrationAccess().getTRegionIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMigrationAccess().getTRegionIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getMigrationAccess().getTRegionCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Migration__TAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMigrationAccess().getTRegionCrossReference_7_1_0()); }
		(
			{ before(grammarAccess.getMigrationAccess().getTRegionIDTerminalRuleCall_7_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMigrationAccess().getTRegionIDTerminalRuleCall_7_1_0_1()); }
		)
		{ after(grammarAccess.getMigrationAccess().getTRegionCrossReference_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__SourceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForagingAccess().getSourceRegionCrossReference_3_0()); }
		(
			{ before(grammarAccess.getForagingAccess().getSourceRegionIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForagingAccess().getSourceRegionIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getForagingAccess().getSourceRegionCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__SourceAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForagingAccess().getSourceRegionCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getForagingAccess().getSourceRegionIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForagingAccess().getSourceRegionIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getForagingAccess().getSourceRegionCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__NestAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForagingAccess().getNestRegionCrossReference_10_0()); }
		(
			{ before(grammarAccess.getForagingAccess().getNestRegionIDTerminalRuleCall_10_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForagingAccess().getNestRegionIDTerminalRuleCall_10_0_1()); }
		)
		{ after(grammarAccess.getForagingAccess().getNestRegionCrossReference_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foraging__SourceAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForagingAccess().getSourceRegionCrossReference_11_1_0()); }
		(
			{ before(grammarAccess.getForagingAccess().getSourceRegionIDTerminalRuleCall_11_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForagingAccess().getSourceRegionIDTerminalRuleCall_11_1_0_1()); }
		)
		{ after(grammarAccess.getForagingAccess().getSourceRegionCrossReference_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__EnvironmentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentAccess().getEnvironmentEnvironmentElementsParserRuleCall_1_0()); }
		ruleEnvironmentElements
		{ after(grammarAccess.getEnvironmentAccess().getEnvironmentEnvironmentElementsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__DisAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbabilisticDecriptionAccess().getDisDistributionParserRuleCall_3_0()); }
		ruleDistribution
		{ after(grammarAccess.getProbabilisticDecriptionAccess().getDisDistributionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProbabilisticDecription__KAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProbabilisticDecriptionAccess().getKRegionCrossReference_6_0()); }
		(
			{ before(grammarAccess.getProbabilisticDecriptionAccess().getKRegionIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProbabilisticDecriptionAccess().getKRegionIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getProbabilisticDecriptionAccess().getKRegionCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__TypeAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionObjectiveAccess().getTypeAlternatives_13_0()); }
		(rule__MissionObjective__TypeAlternatives_13_0)
		{ after(grammarAccess.getMissionObjectiveAccess().getTypeAlternatives_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionObjective__InAssignment_21
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionObjectiveAccess().getInIndicatorParserRuleCall_21_0()); }
		ruleIndicator
		{ after(grammarAccess.getMissionObjectiveAccess().getInIndicatorParserRuleCall_21_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indicator__SpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndicatorAccess().getSpScopeParserRuleCall_0_0()); }
		ruleScope
		{ after(grammarAccess.getIndicatorAccess().getSpScopeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Indicator__OcAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndicatorAccess().getOcAlternatives_1_0()); }
		(rule__Indicator__OcAlternatives_1_0)
		{ after(grammarAccess.getIndicatorAccess().getOcAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicIndicator__OcAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicIndicatorAccess().getOcOccurenceParserRuleCall_2_0()); }
		ruleOccurence
		{ after(grammarAccess.getAtomicIndicatorAccess().getOcOccurenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompoundIndicator__OcAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompoundIndicatorAccess().getOcOccurenceParserRuleCall_2_0()); }
		ruleOccurence
		{ after(grammarAccess.getCompoundIndicatorAccess().getOcOccurenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__SpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getSpAlternatives_0_0()); }
		(rule__Scope__SpAlternatives_0_0)
		{ after(grammarAccess.getScopeAccess().getSpAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__KAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPenaltyAccess().getKDoubleParserRuleCall_3_0()); }
		ruleDouble
		{ after(grammarAccess.getPenaltyAccess().getKDoubleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Penalty__CAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPenaltyAccess().getCConditionParserRuleCall_4_0()); }
		ruleCondition
		{ after(grammarAccess.getPenaltyAccess().getCConditionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__KAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRewardAccess().getKDoubleParserRuleCall_3_0()); }
		ruleDouble
		{ after(grammarAccess.getRewardAccess().getKDoubleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reward__CAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRewardAccess().getCConditionParserRuleCall_4_0()); }
		ruleCondition
		{ after(grammarAccess.getRewardAccess().getCConditionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__RAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getRRegionCrossReference_0_4_0()); }
		(
			{ before(grammarAccess.getConditionAccess().getRRegionIDTerminalRuleCall_0_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConditionAccess().getRRegionIDTerminalRuleCall_0_4_0_1()); }
		)
		{ after(grammarAccess.getConditionAccess().getRRegionCrossReference_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__NAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getNINTTerminalRuleCall_1_5_0()); }
		RULE_INT
		{ after(grammarAccess.getConditionAccess().getNINTTerminalRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__RAssignment_1_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getRRegionCrossReference_1_8_0()); }
		(
			{ before(grammarAccess.getConditionAccess().getRRegionIDTerminalRuleCall_1_8_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConditionAccess().getRRegionIDTerminalRuleCall_1_8_0_1()); }
		)
		{ after(grammarAccess.getConditionAccess().getRRegionCrossReference_1_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__RAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getRRegionCrossReference_2_4_0()); }
		(
			{ before(grammarAccess.getConditionAccess().getRRegionIDTerminalRuleCall_2_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConditionAccess().getRRegionIDTerminalRuleCall_2_4_0_1()); }
		)
		{ after(grammarAccess.getConditionAccess().getRRegionCrossReference_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__NestAssignment_2_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getNestRegionCrossReference_2_6_0()); }
		(
			{ before(grammarAccess.getConditionAccess().getNestRegionIDTerminalRuleCall_2_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConditionAccess().getNestRegionIDTerminalRuleCall_2_6_0_1()); }
		)
		{ after(grammarAccess.getConditionAccess().getNestRegionCrossReference_2_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__XAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementDescriptionAccess().getXRangeParserRuleCall_2_0()); }
		ruleRange
		{ after(grammarAccess.getElementDescriptionAccess().getXRangeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__ObjAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementDescriptionAccess().getObjElementParserRuleCall_3_0()); }
		ruleElement
		{ after(grammarAccess.getElementDescriptionAccess().getObjElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementDescription__RAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementDescriptionAccess().getRProbabilisticDecriptionParserRuleCall_4_0()); }
		ruleProbabilisticDecription
		{ after(grammarAccess.getElementDescriptionAccess().getRProbabilisticDecriptionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__ObAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getObElParserRuleCall_0_0()); }
		ruleEl
		{ after(grammarAccess.getElementAccess().getObElParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__DAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getDDimension2ParserRuleCall_1_3_0()); }
		ruleDimension2
		{ after(grammarAccess.getElementAccess().getDDimension2ParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__WAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getWDoubleParserRuleCall_2_2_0()); }
		ruleDouble
		{ after(grammarAccess.getElementAccess().getWDoubleParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__SmAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getSmMetricParserRuleCall_2_3_0()); }
		ruleMetric
		{ after(grammarAccess.getElementAccess().getSmMetricParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__ItAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getItDoubleParserRuleCall_3_3_0()); }
		ruleDouble
		{ after(grammarAccess.getElementAccess().getItDoubleParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__ObjAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getObjAnKeyword_0_0()); }
		(
			{ before(grammarAccess.getObjectAccess().getObjAnKeyword_0_0()); }
			'An'
			{ after(grammarAccess.getObjectAccess().getObjAnKeyword_0_0()); }
		)
		{ after(grammarAccess.getObjectAccess().getObjAnKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__RAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getRRegionParserRuleCall_4_0()); }
		ruleRegion
		{ after(grammarAccess.getObjectAccess().getRRegionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__ObsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObstacleAccess().getObsAnKeyword_0_0()); }
		(
			{ before(grammarAccess.getObstacleAccess().getObsAnKeyword_0_0()); }
			'An'
			{ after(grammarAccess.getObstacleAccess().getObsAnKeyword_0_0()); }
		)
		{ after(grammarAccess.getObstacleAccess().getObsAnKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obstacle__RAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObstacleAccess().getRRegionParserRuleCall_4_0()); }
		ruleRegion
		{ after(grammarAccess.getObstacleAccess().getRRegionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patch__CAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatchAccess().getCColorParserRuleCall_1_0()); }
		ruleColor
		{ after(grammarAccess.getPatchAccess().getCColorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patch__RAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatchAccess().getRRegionParserRuleCall_5_0()); }
		ruleRegion
		{ after(grammarAccess.getPatchAccess().getRRegionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__LAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightAccess().getLAKeyword_0_0()); }
		(
			{ before(grammarAccess.getLightAccess().getLAKeyword_0_0()); }
			'A'
			{ after(grammarAccess.getLightAccess().getLAKeyword_0_0()); }
		)
		{ after(grammarAccess.getLightAccess().getLAKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__CAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightAccess().getCColorParserRuleCall_5_0()); }
		ruleColor
		{ after(grammarAccess.getLightAccess().getCColorParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__ItAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightAccess().getItDoubleParserRuleCall_9_0()); }
		ruleDouble
		{ after(grammarAccess.getLightAccess().getItDoubleParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Light__PAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLightAccess().getPPositionParserRuleCall_13_0()); }
		rulePosition
		{ after(grammarAccess.getLightAccess().getPPositionParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__PointAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionAccess().getPointAlternatives_2_0()); }
		(rule__Position__PointAlternatives_2_0)
		{ after(grammarAccess.getPositionAccess().getPointAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arena__SAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArenaAccess().getSRegionParserRuleCall_4_0()); }
		ruleRegion
		{ after(grammarAccess.getArenaAccess().getSRegionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__ColorsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegionAccess().getColorsColorParserRuleCall_0_0()); }
		ruleColor
		{ after(grammarAccess.getRegionAccess().getColorsColorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Shape2dAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegionAccess().getShape2dShape2DParserRuleCall_1_0()); }
		ruleShape2D
		{ after(grammarAccess.getRegionAccess().getShape2dShape2DParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getRegionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__RegionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegionAccess().getRegionRegionDefinitionParserRuleCall_3_0()); }
		ruleRegionDefinition
		{ after(grammarAccess.getRegionAccess().getRegionRegionDefinitionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition1__ReferencepointAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinition1Access().getReferencepointPositionParserRuleCall_0_1_0()); }
		rulePosition
		{ after(grammarAccess.getDefinition1Access().getReferencepointPositionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition1__DimensionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinition1Access().getDimensionsDimensionParserRuleCall_1_1_0()); }
		ruleDimension
		{ after(grammarAccess.getDefinition1Access().getDimensionsDimensionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__PointAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinition2Access().getPointPositionParserRuleCall_6_0()); }
		rulePosition
		{ after(grammarAccess.getDefinition2Access().getPointPositionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition2__PointAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinition2Access().getPointPositionParserRuleCall_7_1_0()); }
		rulePosition
		{ after(grammarAccess.getDefinition2Access().getPointPositionParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition3__AxAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinition3Access().getAxAxisParserRuleCall_1_0()); }
		ruleAxis
		{ after(grammarAccess.getDefinition3Access().getAxAxisParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition3__RAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinition3Access().getRRangeParserRuleCall_3_0()); }
		ruleRange
		{ after(grammarAccess.getDefinition3Access().getRRangeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__RAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimension1Access().getRDoubleParserRuleCall_1_0()); }
		ruleDouble
		{ after(grammarAccess.getDimension1Access().getRDoubleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__M1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimension1Access().getM1MetricParserRuleCall_2_0()); }
		ruleMetric
		{ after(grammarAccess.getDimension1Access().getM1MetricParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__HAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimension1Access().getHDoubleParserRuleCall_3_2_0()); }
		ruleDouble
		{ after(grammarAccess.getDimension1Access().getHDoubleParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension1__M2Assignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimension1Access().getM2MetricParserRuleCall_3_3_0()); }
		ruleMetric
		{ after(grammarAccess.getDimension1Access().getM2MetricParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__LAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimension2Access().getLDoubleParserRuleCall_1_0()); }
		ruleDouble
		{ after(grammarAccess.getDimension2Access().getLDoubleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__M3Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimension2Access().getM3MetricParserRuleCall_2_0()); }
		ruleMetric
		{ after(grammarAccess.getDimension2Access().getM3MetricParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__WAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimension2Access().getWDoubleParserRuleCall_4_0()); }
		ruleDouble
		{ after(grammarAccess.getDimension2Access().getWDoubleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__M4Assignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimension2Access().getM4MetricParserRuleCall_5_0()); }
		ruleMetric
		{ after(grammarAccess.getDimension2Access().getM4MetricParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__HAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimension2Access().getHDoubleParserRuleCall_6_2_0()); }
		ruleDouble
		{ after(grammarAccess.getDimension2Access().getHDoubleParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension2__M5Assignment_6_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimension2Access().getM5MetricParserRuleCall_6_3_0()); }
		ruleMetric
		{ after(grammarAccess.getDimension2Access().getM5MetricParserRuleCall_6_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension3__SAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimension3Access().getSDoubleParserRuleCall_1_0()); }
		ruleDouble
		{ after(grammarAccess.getDimension3Access().getSDoubleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension3__M6Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimension3Access().getM6MetricParserRuleCall_2_0()); }
		ruleMetric
		{ after(grammarAccess.getDimension3Access().getM6MetricParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate2D__XAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinate2DAccess().getXDoubleParserRuleCall_0_0()); }
		ruleDouble
		{ after(grammarAccess.getCoordinate2DAccess().getXDoubleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate2D__YAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinate2DAccess().getYDoubleParserRuleCall_2_0()); }
		ruleDouble
		{ after(grammarAccess.getCoordinate2DAccess().getYDoubleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate3D__XAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinate3DAccess().getXDoubleParserRuleCall_0_0()); }
		ruleDouble
		{ after(grammarAccess.getCoordinate3DAccess().getXDoubleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate3D__YAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinate3DAccess().getYDoubleParserRuleCall_2_0()); }
		ruleDouble
		{ after(grammarAccess.getCoordinate3DAccess().getYDoubleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Coordinate3D__ZAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoordinate3DAccess().getZDoubleParserRuleCall_4_0()); }
		ruleDouble
		{ after(grammarAccess.getCoordinate3DAccess().getZDoubleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantSize__NAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantSizeAccess().getNDoubleParserRuleCall_0()); }
		ruleDouble
		{ after(grammarAccess.getConstantSizeAccess().getNDoubleParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lowerbound__NAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLowerboundAccess().getNDoubleParserRuleCall_2_0()); }
		ruleDouble
		{ after(grammarAccess.getLowerboundAccess().getNDoubleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LowerorEqualbound__NAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLowerorEqualboundAccess().getNDoubleParserRuleCall_4_0()); }
		ruleDouble
		{ after(grammarAccess.getLowerorEqualboundAccess().getNDoubleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Upperbound__NAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpperboundAccess().getNDoubleParserRuleCall_2_0()); }
		ruleDouble
		{ after(grammarAccess.getUpperboundAccess().getNDoubleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpperorEqualbound__NAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpperorEqualboundAccess().getNDoubleParserRuleCall_4_0()); }
		ruleDouble
		{ after(grammarAccess.getUpperorEqualboundAccess().getNDoubleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__NAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getNDoubleParserRuleCall_0_0_0()); }
		ruleDouble
		{ after(grammarAccess.getIntervalAccess().getNDoubleParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__MAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getMDoubleParserRuleCall_0_2_0()); }
		ruleDouble
		{ after(grammarAccess.getIntervalAccess().getMDoubleParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__NAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getNDoubleParserRuleCall_1_1_0()); }
		ruleDouble
		{ after(grammarAccess.getIntervalAccess().getNDoubleParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__MAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getMDoubleParserRuleCall_1_3_0()); }
		ruleDouble
		{ after(grammarAccess.getIntervalAccess().getMDoubleParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
